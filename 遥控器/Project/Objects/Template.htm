<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\Template.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\Template.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5050169: Last Updated: Wed May 30 19:17:03 2018
<BR><P>
<H3>Maximum Stack Usage =        928 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
TIM7_IRQHandler &rArr; Loops() &rArr; [local to Schedule_c]::Loop_200Hz() &rArr; UpdateRealCoordinate() &rArr; [local to Map_c]::CorrectCoordinateIncrement(Point) &rArr; Matrix::operator *(const Matrix&) &rArr; Matrix::Matrix(const Matrix&) &rArr; Matrix::CreatMatrixFrame(void*, unsigned, unsigned) &rArr; Matrix::CreatArray(unsigned, unsigned) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const char*) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[32]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[32]">ADC_IRQHandler</a><BR>
 <LI><a href="#[17e]">__rw::__rw_allocate(unsigned, int)</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[17b]">__rw::__rw_throw(int, ...)</a><BR>
 <LI><a href="#[1ce]">std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_getRep(unsigned, unsigned)</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[17b]">__rw::__rw_throw(int, ...)</a><BR>
 <LI><a href="#[1ae]">std::locale::_C_init()</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[18d]">std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const char*)</a><BR>
 <LI><a href="#[184]">std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1cf]">std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned)</a><BR>
 <LI><a href="#[15c]">Matrix::fillMatrix(Matrix::CreatedArreyType)</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[18e]">Matrix::CreatMatrixFrame(Matrix::CreatedArreyType)</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[86]">&lang;Func5&rang;</a> from locale.o(i.<Func5>) referenced from locale.o(i._ZN4__rw15__rw_locale_impC1EPKcjj)
 <LI><a href="#[32]">ADC_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[1a]">BusFault_Handler</a> from stm32f4xx_it.o(i.BusFault_Handler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[34]">CAN1_RX0_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[35]">CAN1_RX1_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[36]">CAN1_SCE_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[33]">CAN1_TX_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[60]">CAN2_RX0_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[61]">CAN2_RX1_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[62]">CAN2_SCE_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[5f]">CAN2_TX_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[6f]">CRYP_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[6e]">DCMI_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[2b]">DMA1_Stream0_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[2c]">DMA1_Stream1_IRQHandler</a> from stm32f4xx_it.o(i.DMA1_Stream1_IRQHandler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[2d]">DMA1_Stream2_IRQHandler</a> from stm32f4xx_it.o(i.DMA1_Stream2_IRQHandler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[2e]">DMA1_Stream3_IRQHandler</a> from stm32f4xx_it.o(i.DMA1_Stream3_IRQHandler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[2f]">DMA1_Stream4_IRQHandler</a> from stm32f4xx_it.o(i.DMA1_Stream4_IRQHandler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[30]">DMA1_Stream5_IRQHandler</a> from stm32f4xx_it.o(i.DMA1_Stream5_IRQHandler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[31]">DMA1_Stream6_IRQHandler</a> from stm32f4xx_it.o(i.DMA1_Stream6_IRQHandler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[4f]">DMA1_Stream7_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[7a]">DMA2D_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[58]">DMA2_Stream0_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[59]">DMA2_Stream1_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[5a]">DMA2_Stream2_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[5b]">DMA2_Stream3_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[5c]">DMA2_Stream4_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[64]">DMA2_Stream5_IRQHandler</a> from stm32f4xx_it.o(i.DMA2_Stream5_IRQHandler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[65]">DMA2_Stream6_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[66]">DMA2_Stream7_IRQHandler</a> from stm32f4xx_it.o(i.DMA2_Stream7_IRQHandler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[1d]">DebugMon_Handler</a> from stm32f4xx_it.o(i.DebugMon_Handler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[5d]">ETH_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[5e]">ETH_WKUP_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[26]">EXTI0_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[48]">EXTI15_10_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[27]">EXTI1_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[28]">EXTI2_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[29]">EXTI3_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[2a]">EXTI4_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[37]">EXTI9_5_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[24]">FLASH_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[50]">FMC_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[71]">FPU_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[70]">HASH_RNG_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[18]">HardFault_Handler</a> from stm32f4xx_it.o(i.HardFault_Handler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[40]">I2C1_ER_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[3f]">I2C1_EV_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[42]">I2C2_ER_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[41]">I2C2_EV_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[69]">I2C3_ER_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[68]">I2C3_EV_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[79]">LTDC_ER_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[78]">LTDC_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[19]">MemManage_Handler</a> from stm32f4xx_it.o(i.MemManage_Handler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[17]">NMI_Handler</a> from stm32f4xx_it.o(i.NMI_Handler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[63]">OTG_FS_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[4a]">OTG_FS_WKUP_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[6b]">OTG_HS_EP1_IN_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[6a]">OTG_HS_EP1_OUT_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[6d]">OTG_HS_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[6c]">OTG_HS_WKUP_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[21]">PVD_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[1e]">PendSV_Handler</a> from stm32f4xx_it.o(i.PendSV_Handler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[25]">RCC_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[49]">RTC_Alarm_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[23]">RTC_WKUP_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[16]">Reset_Handler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[77]">SAI1_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[51]">SDIO_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[43]">SPI1_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[44]">SPI2_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[53]">SPI3_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[74]">SPI4_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[75]">SPI5_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[76]">SPI6_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[1c]">SVC_Handler</a> from stm32f4xx_it.o(i.SVC_Handler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[1f]">SysTick_Handler</a> from stm32f4xx_it.o(i.SysTick_Handler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[7c]">SystemInit</a> from system_stm32f4xx.o(i.SystemInit) referenced from startup_stm32f429_439xx.o(.text)
 <LI><a href="#[22]">TAMP_STAMP_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[38]">TIM1_BRK_TIM9_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[3b]">TIM1_CC_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[3a]">TIM1_TRG_COM_TIM11_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[39]">TIM1_UP_TIM10_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[3c]">TIM2_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[3d]">TIM3_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[3e]">TIM4_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[52]">TIM5_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[56]">TIM6_DAC_IRQHandler</a> from stm32f4xx_it.o(i.TIM6_DAC_IRQHandler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[57]">TIM7_IRQHandler</a> from stm32f4xx_it.o(i.TIM7_IRQHandler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[4b]">TIM8_BRK_TIM12_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[4e]">TIM8_CC_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[4d]">TIM8_TRG_COM_TIM14_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[4c]">TIM8_UP_TIM13_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[54]">UART4_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[55]">UART5_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[72]">UART7_IRQHandler</a> from stm32f4xx_it.o(i.UART7_IRQHandler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[73]">UART8_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[45]">USART1_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[46]">USART2_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[47]">USART3_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[67]">USART6_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[1b]">UsageFault_Handler</a> from stm32f4xx_it.o(i.UsageFault_Handler) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[20]">WWDG_IRQHandler</a> from startup_stm32f429_439xx.o(.text) referenced from startup_stm32f429_439xx.o(RESET)
 <LI><a href="#[89]">__default_new_handler()</a> from arm_newhandler_noexceptions.o(.text) referenced from new.o(i._Znwj)
 <LI><a href="#[84]">[local to Vol_curve_c]::Triangle_Loop(unsigned, unsigned, unsigned, const double*, unsigned, unsigned, unsigned)</a> from vol_curve.o(i._ZN33_INTERNAL_11_Vol_curve_c_8a85b6a913Triangle_LoopEjjjPKdjjj) referenced from vol_curve.o(i._Z9CurveLoopd)
 <LI><a href="#[83]">[local to Vol_curve_c]::Trapezoid_Loop(unsigned, unsigned, unsigned, const double*, unsigned, unsigned, unsigned)</a> from vol_curve.o(i._ZN33_INTERNAL_11_Vol_curve_c_8a85b6a914Trapezoid_LoopEjjjPKdjjj) referenced from vol_curve.o(i._Z9CurveLoopd)
 <LI><a href="#[80]">[local to arm_exceptions_c]::__default_terminate_handler()</a> from arm_exceptions_globs.o(.text) referenced from arm_exceptions_globs.o(.text)
 <LI><a href="#[93]">__rw::__rw_facet_base::_C_initfacet(const std::locale&)</a> from char.o(i._ZN4__rw15__rw_facet_base12_C_initfacetERKSt6locale) referenced from rwstdexcept.o(.constdata__ZTVNSt6locale5facetE)
 <LI><a href="#[93]">__rw::__rw_facet_base::_C_initfacet(const std::locale&)</a> from char.o(i._ZN4__rw15__rw_facet_base12_C_initfacetERKSt6locale) referenced from rwstdexcept.o(.constdata__ZTVSt8messagesIcE)
 <LI><a href="#[91]">__rw::__rw_facet_maker&lang;std::ctype&lang;char&rang;&rang;::_C_maker_func(int, const char*, unsigned)</a> from rwstdexcept.o(t._ZN4__rw16__rw_facet_makerISt5ctypeIcEE13_C_maker_funcEiPKcj) referenced from rwstdexcept.o(t._ZNKSt8messagesIcE6do_getEiiiRKSs)
 <LI><a href="#[8d]">__rw::__rw_locale_vector&lang;__rw::__rw_cat*&rang;::~__rw_locale_vector()</a> from rwcats.o(t._ZN4__rw18__rw_locale_vectorIPNS_8__rw_catEED1Ev) referenced from rwcats.o(i.__sti___10_rwcats_cpp_64e8068e)
 <LI><a href="#[88]">__rw::__rw_locale_vector&lang;std::__rw_open_cat_data&rang;::~__rw_locale_vector()</a> from messages.o(t._ZN4__rw18__rw_locale_vectorISt18__rw_open_cat_dataED1Ev) referenced from messages.o(i._ZSt13__rw_get_catsv)
 <LI><a href="#[15]">__rw::__rw_throw_exception_noex(int, char*)</a> from rwthrowproc_impl_noex.o(i._ZN4__rw25__rw_throw_exception_noexEiPc) referenced 2 times from rwthrowproc_noex.o(.data)
 <LI><a href="#[8e]">Matrix::~Matrix()</a> from matrix.o(i._ZN6MatrixD1Ev) referenced from map.o(i.__sti___5_Map_c_1c83cf28)
 <LI><a href="#[98]">std::__rw_exception::what() const</a> from rwstdexcept.o(i._ZNKSt14__rw_exception4whatEv) referenced from rwstdexcept.o(.constdata__ZTVSt14__rw_exception)
 <LI><a href="#[9e]">std::messages&lang;char&rang;::do_get(int, int, int, const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&) const</a> from rwstdexcept.o(t._ZNKSt8messagesIcE6do_getEiiiRKSs) referenced from rwstdexcept.o(.constdata__ZTVSt8messagesIcE)
 <LI><a href="#[9d]">std::messages&lang;char&rang;::do_open(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&, const std::locale&) const</a> from rwstdexcept.o(t._ZNKSt8messagesIcE7do_openERKSsRKSt6locale) referenced from rwstdexcept.o(.constdata__ZTVSt8messagesIcE)
 <LI><a href="#[85]">std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string()</a> from char.o(t._ZNSsD1Ev) referenced from locale.o(i._ZN4__rw15__rw_locale_impC1EPKcjj)
 <LI><a href="#[85]">std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string()</a> from char.o(t._ZNSsD1Ev) referenced from locale.o(t._ZN4__rw18__rw_locale_vectorISsED1Ev)
 <LI><a href="#[95]">std::ctype_byname&lang;char&rang;::~ctype_byname__deallocating()</a> from char.o(i._ZNSt12ctype_bynameIcED0Ev) referenced from char.o(.constdata__ZTVSt12ctype_bynameIcE)
 <LI><a href="#[94]">std::ctype_byname&lang;char&rang;::~ctype_byname()</a> from char.o(i._ZNSt12ctype_bynameIcED1Ev) referenced from char.o(.constdata__ZTVSt12ctype_bynameIcE)
 <LI><a href="#[97]">std::__rw_exception::~__rw_exception()</a> from rwstdexcept.o(i._ZNSt14__rw_exceptionD1Ev) referenced from rwstdexcept.o(.constdata__ZTVSt14__rw_exception)
 <LI><a href="#[90]">std::__rw_open_cat_data::__rw_open_cat_data()</a> from messages.o(i._ZNSt18__rw_open_cat_dataC1Ev) referenced from messages.o(t._ZN4__rw18__rw_locale_vectorISt18__rw_open_cat_dataE6resizeEj)
 <LI><a href="#[8f]">std::__rw_open_cat_data::~__rw_open_cat_data()</a> from messages.o(i._ZNSt18__rw_open_cat_dataD1Ev) referenced from messages.o(t._ZN4__rw18__rw_locale_vectorISt18__rw_open_cat_dataE6resizeEj)
 <LI><a href="#[8f]">std::__rw_open_cat_data::~__rw_open_cat_data()</a> from messages.o(i._ZNSt18__rw_open_cat_dataD1Ev) referenced from messages.o(t._ZN4__rw18__rw_locale_vectorISt18__rw_open_cat_dataED1Ev)
 <LI><a href="#[96]">std::ctype&lang;char&rang;::_C_initfacet(const std::locale&)</a> from char.o(i._ZNSt5ctypeIcE12_C_initfacetERKSt6locale) referenced from char.o(.constdata__ZTVSt12ctype_bynameIcE)
 <LI><a href="#[96]">std::ctype&lang;char&rang;::_C_initfacet(const std::locale&)</a> from char.o(i._ZNSt5ctypeIcE12_C_initfacetERKSt6locale) referenced from char.o(.constdata__ZTVSt5ctypeIcE)
 <LI><a href="#[9a]">std::ctype&lang;char&rang;::~ctype__deallocating()</a> from char.o(i._ZNSt5ctypeIcED0Ev) referenced from char.o(.constdata__ZTVSt5ctypeIcE)
 <LI><a href="#[99]">std::ctype&lang;char&rang;::~ctype()</a> from char.o(i._ZNSt5ctypeIcED1Ev) referenced from char.o(.constdata__ZTVSt5ctypeIcE)
 <LI><a href="#[92]">std::locale::facet::~facet__deallocating()</a> from rwstdexcept.o(i._ZNSt6locale5facetD0Ev) referenced from rwstdexcept.o(.constdata__ZTVNSt6locale5facetE)
 <LI><a href="#[87]">std::locale::~locale()</a> from locale.o(i._ZNSt6localeD1Ev) referenced from locale.o(i._ZNSt6locale7classicEv)
 <LI><a href="#[9c]">std::messages&lang;char&rang;::~messages__deallocating()</a> from rwstdexcept.o(i._ZNSt8messagesIcED0Ev) referenced from rwstdexcept.o(.constdata__ZTVSt8messagesIcE)
 <LI><a href="#[9b]">std::messages&lang;char&rang;::~messages()</a> from rwstdexcept.o(i._ZNSt8messagesIcED1Ev) referenced from rwstdexcept.o(.constdata__ZTVSt8messagesIcE)
 <LI><a href="#[8c]">operator delete[] (void*)</a> from array_del.o(i._ZdaPv) referenced from cxa_vec_new.o(i.__cxa_vec_new)
 <LI><a href="#[7d]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32f429_439xx.o(.text)
 <LI><a href="#[a1]">__sti___10_locale_cpp_ff99fc7b</a> from locale.o(i.__sti___10_locale_cpp_ff99fc7b) referenced from locale.o(.init_array)
 <LI><a href="#[a2]">__sti___10_rwcats_cpp_64e8068e</a> from rwcats.o(i.__sti___10_rwcats_cpp_64e8068e) referenced from rwcats.o(.init_array)
 <LI><a href="#[9f]">__sti___5_Map_c_1c83cf28</a> from map.o(i.__sti___5_Map_c_1c83cf28) referenced from map.o(.init_array)
 <LI><a href="#[a0]">__sti___8_char_cpp_a3dc957a</a> from char.o(i.__sti___8_char_cpp_a3dc957a) referenced from char.o(.init_array)
 <LI><a href="#[7f]">_sbackspace</a> from _sgetc.o(.text) referenced from sscanf.o(.text)
 <LI><a href="#[81]">_scanf_char_input</a> from scanf_char.o(.text) referenced from scanf_char.o(.text)
 <LI><a href="#[7e]">_sgetc</a> from _sgetc.o(.text) referenced from sscanf.o(.text)
 <LI><a href="#[8b]">_snputc</a> from printfa.o(i._snputc) referenced from printfa.o(i.__0vsnprintf)
 <LI><a href="#[8a]">fputc</a> from fputc.o(i.fputc) referenced from printfa.o(i.__0fprintf)
 <LI><a href="#[82]">isspace</a> from isspace_o.o(.text) referenced from scanf_char.o(.text)
 <LI><a href="#[7b]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[7d]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(.text)
</UL>
<P><STRONG><a name="[1d4]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[a4]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[c5]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[1d5]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[a6]"></a>_main_cpp_init$empty</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8a.o(.ARM.Collect$$$$00000009))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = _main_cpp_init$empty &rArr; __cpp_initialize__aeabi_
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cpp_initialize__aeabi_
</UL>

<P><STRONG><a name="[1d6]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[1d7]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[1d8]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[1d9]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[16]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>CAN2_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>CAN2_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>CAN2_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>CAN2_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[6f]"></a>CRYP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[6e]"></a>DCMI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>DMA1_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>DMA1_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[7a]"></a>DMA2D_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>DMA2_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>DMA2_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>DMA2_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>DMA2_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>DMA2_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>DMA2_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>ETH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>ETH_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>FMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[71]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[70]"></a>HASH_RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>I2C3_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[79]"></a>LTDC_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[78]"></a>LTDC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>OTG_FS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>OTG_FS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>OTG_HS_EP1_IN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[6a]"></a>OTG_HS_EP1_OUT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[6d]"></a>OTG_HS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[6c]"></a>OTG_HS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[77]"></a>SAI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[74]"></a>SPI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[75]"></a>SPI5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[76]"></a>SPI6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>TAMP_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>TIM1_BRK_TIM9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>TIM1_TRG_COM_TIM11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>TIM1_UP_TIM10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>TIM8_BRK_TIM12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>TIM8_TRG_COM_TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>TIM8_UP_TIM13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[73]"></a>UART8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>USART6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429_439xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[1a3]"></a>___aeabi_memcpy$base</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::char_traits&lang;char&rang;::copy(char*, const char*, unsigned)
</UL>

<P><STRONG><a name="[1da]"></a>___aeabi_memcpy4$base</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[1db]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[1dc]"></a>___aeabi_memcpy$move</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, memmovea.o(.text), UNUSED)

<P><STRONG><a name="[1dd]"></a>___aeabi_memcpy4$move</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text), UNUSED)

<P><STRONG><a name="[1de]"></a>___aeabi_memcpy8$move</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text), UNUSED)

<P><STRONG><a name="[1d2]"></a>___aeabi_memmove$base</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ___aeabi_memmove$base
</UL>
<BR>[Called By]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned)
</UL>

<P><STRONG><a name="[1df]"></a>__aeabi_memmove4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text), UNUSED)

<P><STRONG><a name="[1e0]"></a>__aeabi_memmove8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text), UNUSED)

<P><STRONG><a name="[a8]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[1e1]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[1e2]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[a7]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[f3]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateLine(Point, double, bool)
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateLine(Point, Point)
</UL>

<P><STRONG><a name="[1e3]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[a9]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[181]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const char*)
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const char*, const std::allocator&lang;char&rang;&)
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned)
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_use_c_lib_locale::__rw_use_c_lib_locale(const char*, int)
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::_C_vformat(int, std::__va_list)
</UL>

<P><STRONG><a name="[a3]"></a>__cpp_initialize__aeabi_</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, cpp_init.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __cpp_initialize__aeabi_
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_cpp_init$empty
</UL>

<P><STRONG><a name="[aa]"></a>__aeabi_dadd</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::operator *(const Matrix&)
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateRealCoordinate()
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to Map_c]::GetOriginalCoordinate(motion_status, Coordinate&)
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDistanceToLine(Point, Line)
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateLine(Point, double, bool)
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to Motion_Ctrl_c]::distanceCal(double, double, double, double, double*, double*)
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MixSpeed(double, double, double, MoveInLine, Coordinate, int*, double*)
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatMoveLine(MoveInLine*, double, double, Coordinate*)
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to Vol_curve_c]::Trapezoid_Loop(unsigned, unsigned, unsigned, const double*, unsigned, unsigned, unsigned)
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to Vol_curve_c]::Distance_curve(double, double, unsigned, Vol_CurveType*)
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>

<P><STRONG><a name="[af]"></a>__aeabi_dsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateLine(Point, double, bool)
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to Motion_Ctrl_c]::distanceCal(double, double, double, double, double*, double*)
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MixSpeed(double, double, double, MoveInLine, Coordinate, int*, double*)
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatMoveLine(MoveInLine*, double, double, Coordinate*)
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CurveLoop(double)
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>

<P><STRONG><a name="[b0]"></a>__aeabi_drsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to Map_c]::GetOriginalCoordinate(motion_status, Coordinate&)
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to Vol_curve_c]::Distance_curve(double, double, unsigned, Vol_CurveType*)
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fmod
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>

<P><STRONG><a name="[b1]"></a>__aeabi_dmul</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::operator *(const Matrix&)
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to Map_c]::SetOrigin()
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to Map_c]::GetOriginalCoordinate(motion_status, Coordinate&)
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDistanceToLine(Point, Line)
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateLine(Point, double, bool)
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T_cal()
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to Motion_Ctrl_c]::distanceCal(double, double, double, double, double*, double*)
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MixSpeed(double, double, double, MoveInLine, Coordinate, int*, double*)
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getEndDistance(double, PID)
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatMoveLine(MoveInLine*, double, double, Coordinate*)
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to Vol_curve_c]::Trapezoid_Loop(unsigned, unsigned, unsigned, const double*, unsigned, unsigned, unsigned)
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to Vol_curve_c]::Distance_curve(double, double, unsigned, Vol_CurveType*)
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to Vol_curve_c]::Triangle_Loop(unsigned, unsigned, unsigned, const double*, unsigned, unsigned, unsigned)
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>

<P><STRONG><a name="[b2]"></a>__aeabi_ddiv</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDistanceToLine(Point, Line)
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to Motion_Ctrl_c]::distanceCal(double, double, double, double, double*, double*)
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MixSpeed(double, double, double, MoveInLine, Coordinate, int*, double*)
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getEndDistance(double, PID)
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatMoveLine(MoveInLine*, double, double, Coordinate*)
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to Vol_curve_c]::Trapezoid_Loop(unsigned, unsigned, unsigned, const double*, unsigned, unsigned, unsigned)
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to Vol_curve_c]::Distance_curve(double, double, unsigned, Vol_CurveType*)
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to Vol_curve_c]::Triangle_Loop(unsigned, unsigned, unsigned, const double*, unsigned, unsigned, unsigned)
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>

<P><STRONG><a name="[b3]"></a>__aeabi_i2d</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, dflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_i2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReceiveDataFromMaster_Buffer(CMD_BufferType)
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReceiveDataFromEquips_Buffer(Eq_Rx_BufferType)
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReceiveDataFromF103_Buffer(F1_Rx_BufferType)
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GoToSpecialPoints(MovePointsType*, MovePointsMarkType*, MovePointsMarkType)
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateRealCoordinate()
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to Map_c]::GetOriginalCoordinate(motion_status, Coordinate&)
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Controler_handle()
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenMode_Loop()
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AimMode_Loop()
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to Vol_curve_c]::Trapezoid_Loop(unsigned, unsigned, unsigned, const double*, unsigned, unsigned, unsigned)
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to Vol_curve_c]::Distance_curve(double, double, unsigned, Vol_CurveType*)
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to Vol_curve_c]::Triangle_Loop(unsigned, unsigned, unsigned, const double*, unsigned, unsigned, unsigned)
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[b4]"></a>__aeabi_ui2d</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, dfltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_ui2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T_cal()
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getEndDistance(double, PID)
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CurveLoop(double)
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to Vol_curve_c]::Trapezoid_Loop(unsigned, unsigned, unsigned, const double*, unsigned, unsigned, unsigned)
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to Vol_curve_c]::Distance_curve(double, double, unsigned, Vol_CurveType*)
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to Vol_curve_c]::Triangle_Loop(unsigned, unsigned, unsigned, const double*, unsigned, unsigned, unsigned)
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[b5]"></a>__aeabi_d2iz</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, dfixi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_d2iz
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AimAngleUpdate(double)
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendDataToMaster()
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MixSpeed(double, double, double, MoveInLine, Coordinate, int*, double*)
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;END_Loop(double)
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Line_Location_Loop(MoveInLine)
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CurveLoop(double)
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to Vol_curve_c]::Trapezoid_Loop(unsigned, unsigned, unsigned, const double*, unsigned, unsigned, unsigned)
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to Vol_curve_c]::Distance_curve(double, double, unsigned, Vol_CurveType*)
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to Vol_curve_c]::Triangle_Loop(unsigned, unsigned, unsigned, const double*, unsigned, unsigned, unsigned)
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendDataToF103(unsigned char)
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[b7]"></a>__aeabi_d2uiz</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, dfixui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2uiz
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T_cal()
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getEndDistance(double, PID)
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CurveLoop(double)
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to Vol_curve_c]::Distance_curve(double, double, unsigned, Vol_CurveType*)
</UL>

<P><STRONG><a name="[f1]"></a>__aeabi_f2d</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReceiveDataFromF103_Buffer(F1_Rx_BufferType)
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to Map_c]::CorrectCoordinateIncrement(Point)
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to Map_c]::GetOriginalCoordinate(motion_status, Coordinate&)
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDistanceToLine(Point, Line)
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateLine(Point, double, bool)
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateLine(Point, Point)
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AimMode_Loop()
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MixSpeed(double, double, double, MoveInLine, Coordinate, int*, double*)
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatMoveLine(MoveInLine*, double, double, Coordinate*)
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to Vol_curve_c]::Distance_curve(double, double, unsigned, Vol_CurveType*)
</UL>

<P><STRONG><a name="[156]"></a>__aeabi_cdcmpeq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cdcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to Motion_Ctrl_c]::distanceCal(double, double, double, double, double*, double*)
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CurveLoop(double)
</UL>

<P><STRONG><a name="[f2]"></a>__aeabi_cdcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to Map_c]::GetOriginalCoordinate(motion_status, Coordinate&)
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDistanceToLine(Point, Line)
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateLine(Point, Point)
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AimMode_Loop()
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to Motion_Ctrl_c]::distanceCal(double, double, double, double, double*, double*)
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MixSpeed(double, double, double, MoveInLine, Coordinate, int*, double*)
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;END_Loop(double)
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatMoveLine(MoveInLine*, double, double, Coordinate*)
</UL>

<P><STRONG><a name="[fe]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdrcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to Map_c]::GetOriginalCoordinate(motion_status, Coordinate&)
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AimMode_Loop()
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to Vol_curve_c]::Distance_curve(double, double, unsigned, Vol_CurveType*)
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[b8]"></a>__aeabi_d2f</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to Map_c]::SetOrigin()
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to Map_c]::CorrectCoordinateIncrement(Point)
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to Map_c]::GetOriginalCoordinate(motion_status, Coordinate&)
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatMoveLine(MoveInLine*, double, double, Coordinate*)
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
</UL>

<P><STRONG><a name="[ba]"></a>__aeabi_vec_delete</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, aeabi_vec_delete_noexceptions.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_vec_delete &rArr; __aeabi_vec_dtor_cookie &rArr; __aeabi_vec_dtor
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_dtor_cookie
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;std::__rw_open_cat_data&rang;::~__rw_locale_vector()
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;std::__rw_open_cat_data&rang;::resize(unsigned)
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&rang;::~__rw_locale_vector()
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned)
</UL>

<P><STRONG><a name="[ab]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[1e4]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[b6]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
</UL>

<P><STRONG><a name="[1e5]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[ac]"></a>__aeabi_lasr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[1e6]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[1a9]"></a>strcat</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, strcat.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::_C_vformat(int, std::__va_list)
</UL>

<P><STRONG><a name="[189]"></a>strcpy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, strcpy.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_use_c_lib_locale::__rw_use_c_lib_locale(const char*, int)
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::_C_vformat(int, std::__va_list)
</UL>

<P><STRONG><a name="[177]"></a>strrchr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, strrchr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list)
</UL>

<P><STRONG><a name="[bc]"></a>sscanf</STRONG> (Thumb, 48 bytes, Stack size 72 bytes, sscanf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf_char
</UL>
<BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list)
</UL>

<P><STRONG><a name="[1e7]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[1b9]"></a>__rt_ddtor_pointer_addr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cpp_dtor.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_finalize
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>

<P><STRONG><a name="[1e8]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cpp_final.o(.text), UNUSED)

<P><STRONG><a name="[1e9]"></a>__aeabi_unwind_cpp_pr0</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cpp_unwinder.o(.text), UNUSED)

<P><STRONG><a name="[1ea]"></a>__aeabi_unwind_cpp_pr1</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cpp_unwinder.o(.text), UNUSED)

<P><STRONG><a name="[1eb]"></a>_Unwind_DeleteException</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cpp_unwinder.o(.text), UNUSED)

<P><STRONG><a name="[1ec]"></a>_Unwind_Activity</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cpp_unwinder.o(.text), UNUSED)

<P><STRONG><a name="[1ed]"></a>_Unwind_RaiseException</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cpp_unwinder.o(.text), UNUSED)

<P><STRONG><a name="[c2]"></a>__rt_eh_globals_addr</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, cpp_unwinder.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_get_globals
</UL>

<P><STRONG><a name="[b9]"></a>_float_round</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>

<P><STRONG><a name="[1ee]"></a>_float_epilogue</STRONG> (Thumb, 92 bytes, Stack size 4 bytes, fepilogue.o(.text), UNUSED)

<P><STRONG><a name="[ae]"></a>_double_round</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
</UL>

<P><STRONG><a name="[ad]"></a>_double_epilogue</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ul2d
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drem
</UL>

<P><STRONG><a name="[be]"></a>_dsqrt</STRONG> (Thumb, 162 bytes, Stack size 32 bytes, dsqrt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _dsqrt &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
</UL>

<P><STRONG><a name="[bf]"></a>_drem</STRONG> (Thumb, 134 bytes, Stack size 48 bytes, drem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _drem &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fmod
</UL>

<P><STRONG><a name="[89]"></a>__default_new_handler()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, arm_newhandler_noexceptions.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> new.o(i._Znwj)
</UL>
<P><STRONG><a name="[c0]"></a>std::terminate()</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, arm_exceptions_terminate.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_get_globals
</UL>
<BR>[Called By]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_array_new_general
</UL>

<P><STRONG><a name="[c1]"></a>__cxa_get_globals</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, arm_exceptions_globs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_exceptions_buffer_init
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_eh_globals_addr
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::terminate()
</UL>

<P><STRONG><a name="[a5]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[1ef]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[1f0]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[1ca]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[c6]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[c7]"></a>__rt_ctype_table</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ctype_o.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isspace
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype_byname&lang;char&rang;::_C_get_mask_table(const char*)
</UL>

<P><STRONG><a name="[82]"></a>isspace</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, isspace_o.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = isspace
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scanf_char.o(.text)
</UL>
<P><STRONG><a name="[1f1]"></a>____aeabi_memcpy8$ret$move</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmove.o(.text), UNUSED)

<P><STRONG><a name="[1f2]"></a>___aeabi_memmove4$ret</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmove.o(.text), UNUSED)

<P><STRONG><a name="[1f3]"></a>___aeabi_memmove8$ret</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmove.o(.text), UNUSED)

<P><STRONG><a name="[1f4]"></a>__aeabi_memcpy</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, memmove.o(.text), UNUSED)

<P><STRONG><a name="[d8]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmove.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Stream5_IRQHandler
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream5_IRQHandler
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream1_IRQHandler
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateLine(Point, double, bool)
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateLine(Point, Point)
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AfterGetAim(double, double, unsigned)
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AimMode_Loop()
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatMoveLine(MoveInLine*, double, double, Coordinate*)
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Line_Location_Loop(MoveInLine)
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CurveLoop(double)
</UL>

<P><STRONG><a name="[1f5]"></a>__aeabi_memmove</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmove.o(.text), UNUSED)

<P><STRONG><a name="[182]"></a>memcpy</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmove.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned)
</UL>

<P><STRONG><a name="[1f6]"></a>memmove</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmove.o(.text), UNUSED)

<P><STRONG><a name="[1a5]"></a>strcmp</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, strcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype_byname&lang;char&rang;::_C_get_mask_table(const char*)
</UL>

<P><STRONG><a name="[c8]"></a>_scanf_longlong</STRONG> (Thumb, 342 bytes, Stack size 56 bytes, _scanf_longlong.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _scanf_longlong
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[ca]"></a>_scanf_int</STRONG> (Thumb, 332 bytes, Stack size 56 bytes, _scanf_int.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[d2]"></a>_scanf_string</STRONG> (Thumb, 224 bytes, Stack size 56 bytes, _scanf_str.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _scanf_string
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[d1]"></a>_scanf_real</STRONG> (Thumb, 0 bytes, Stack size 104 bytes, scanf_fp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _scanf_real
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[cd]"></a>_scanf_really_real</STRONG> (Thumb, 556 bytes, Stack size 104 bytes, scanf_fp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_digit
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
</UL>

<P><STRONG><a name="[bd]"></a>__vfscanf_char</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, scanf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sscanf
</UL>

<P><STRONG><a name="[7e]"></a>_sgetc</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, _sgetc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> sscanf.o(.text)
</UL>
<P><STRONG><a name="[7f]"></a>_sbackspace</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, _sgetc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> sscanf.o(.text)
</UL>
<P><STRONG><a name="[1b2]"></a>__rt_new_handler_addr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cpp_memory.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
</UL>

<P><STRONG><a name="[d0]"></a>__aeabi_d2ulz</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[1b8]"></a>__cxa_rethrow</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_rethrow_noexceptions.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_array_new_general
</UL>

<P><STRONG><a name="[1ba]"></a>__aeabi_vec_dtor</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, aeabi_vec_dtor_noexceptions.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __aeabi_vec_dtor
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_dtor_cookie
</UL>

<P><STRONG><a name="[c4]"></a>__ARM_exceptions_buffer_init</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, arm_exceptions_mem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = __ARM_exceptions_buffer_init &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_get_globals
</UL>

<P><STRONG><a name="[1f7]"></a>__ARM_exceptions_buffer_allocate</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, arm_exceptions_mem.o(.text), UNUSED)

<P><STRONG><a name="[1f8]"></a>__ARM_exceptions_buffer_free</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, arm_exceptions_mem.o(.text), UNUSED)

<P><STRONG><a name="[1f9]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, semi.o(.text), UNUSED)

<P><STRONG><a name="[c9]"></a>_chval</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, _chval.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_int
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_longlong
</UL>

<P><STRONG><a name="[cf]"></a>__vfscanf</STRONG> (Thumb, 808 bytes, Stack size 88 bytes, _scanf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = __vfscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_real
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_string
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_int
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_longlong
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf_char
</UL>

<P><STRONG><a name="[1fa]"></a>__I$use$semihosting$fputc</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, iusesemip.o(.text), UNUSED)

<P><STRONG><a name="[cc]"></a>__aeabi_ul2d</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, dfltul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
</UL>

<P><STRONG><a name="[1b7]"></a>__ARM_vec_cleanup</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, ARM_vec_cleanup_noexceptions.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __ARM_vec_cleanup
</UL>
<BR>[Called By]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_array_new_general
</UL>

<P><STRONG><a name="[1fb]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[1fc]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[1a]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.BusFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>DMA1_Stream1_IRQHandler</STRONG> (Thumb, 136 bytes, Stack size 48 bytes, stm32f4xx_it.o(i.DMA1_Stream1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = DMA1_Stream1_IRQHandler &rArr; ReceiveDataFromMaster_Buffer(CMD_BufferType) &rArr; AfterGetAim(double, double, unsigned) &rArr; CreatMoveLine(MoveInLine*, double, double, Coordinate*) &rArr; CreateLine(Point, Point) &rArr; CreateLine(Point, double, bool) &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReceiveDataFromMaster_Buffer(CMD_BufferType)
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ReceiveSet_Change(unsigned, unsigned, unsigned, unsigned)
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetFlagStatus
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearITPendingBit
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>DMA1_Stream2_IRQHandler</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, stm32f4xx_it.o(i.DMA1_Stream2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = DMA1_Stream2_IRQHandler &rArr; ReceiveDataFromEquips_Buffer(Eq_Rx_BufferType) &rArr; __aeabi_i2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReceiveDataFromEquips_Buffer(Eq_Rx_BufferType)
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ReceiveSet_Change(unsigned, unsigned, unsigned, unsigned)
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetFlagStatus
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>DMA1_Stream3_IRQHandler</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, stm32f4xx_it.o(i.DMA1_Stream3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = DMA1_Stream3_IRQHandler &rArr; DMA_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetFlagStatus
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>DMA1_Stream4_IRQHandler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32f4xx_it.o(i.DMA1_Stream4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = DMA1_Stream4_IRQHandler &rArr; DMA_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CleanActionFlags()
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetFlagStatus
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>DMA1_Stream5_IRQHandler</STRONG> (Thumb, 144 bytes, Stack size 32 bytes, stm32f4xx_it.o(i.DMA1_Stream5_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = DMA1_Stream5_IRQHandler &rArr; ReceiveDataFromF103_Buffer(F1_Rx_BufferType) &rArr; __aeabi_i2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FeedDog(FlagsTypes)
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReceiveDataFromF103_Buffer(F1_Rx_BufferType)
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ReceiveSet_Change(unsigned, unsigned, unsigned, unsigned)
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetFlagStatus
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearITPendingBit
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>DMA1_Stream6_IRQHandler</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, stm32f4xx_it.o(i.DMA1_Stream6_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = DMA1_Stream6_IRQHandler &rArr; DMA_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetFlagStatus
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>DMA2_Stream5_IRQHandler</STRONG> (Thumb, 136 bytes, Stack size 32 bytes, stm32f4xx_it.o(i.DMA2_Stream5_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = DMA2_Stream5_IRQHandler &rArr; ReceiveDataFromPC_Buffer(PC_Rx_BufferType)
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReceiveDataFromPC_Buffer(PC_Rx_BufferType)
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ReceiveSet_Change(unsigned, unsigned, unsigned, unsigned)
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetFlagStatus
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearITPendingBit
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>DMA2_Stream7_IRQHandler</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, stm32f4xx_it.o(i.DMA2_Stream7_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = DMA2_Stream7_IRQHandler &rArr; DMA_GetFlagStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetFlagStatus
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[16f]"></a>DMA_ClearFlag</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, stm32f4xx_dma.o(i.DMA_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::Equips_USART_Tx_DMA_Config()
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::Equips_USART_Rx_DMA_Config(unsigned, unsigned)
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::Ctrl_USART_Tx_DMA_Config()
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::Ctrl_USART_Rx_DMA_Config(unsigned, unsigned)
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::PC_USART_Tx_DMA_Config()
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::PC_USART_Rx_DMA_Config(unsigned, unsigned)
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::BL_USART_Tx_DMA_Config()
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::BL_USART_Rx_DMA_Config(unsigned, unsigned)
</UL>

<P><STRONG><a name="[d5]"></a>DMA_ClearITPendingBit</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, stm32f4xx_dma.o(i.DMA_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Stream7_IRQHandler
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Stream5_IRQHandler
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream6_IRQHandler
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream5_IRQHandler
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream4_IRQHandler
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream3_IRQHandler
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream2_IRQHandler
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream1_IRQHandler
</UL>

<P><STRONG><a name="[d6]"></a>DMA_Cmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_dma.o(i.DMA_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Stream5_IRQHandler
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream5_IRQHandler
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream2_IRQHandler
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream1_IRQHandler
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg_byDMA(DMA_Stream_TypeDef*, unsigned)
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::Equips_USART_Tx_DMA_Config()
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::Equips_USART_Rx_DMA_Config(unsigned, unsigned)
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::Ctrl_USART_Tx_DMA_Config()
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::Ctrl_USART_Rx_DMA_Config(unsigned, unsigned)
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::PC_USART_Tx_DMA_Config()
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::PC_USART_Rx_DMA_Config(unsigned, unsigned)
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::BL_USART_Tx_DMA_Config()
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::BL_USART_Rx_DMA_Config(unsigned, unsigned)
</UL>

<P><STRONG><a name="[16d]"></a>DMA_DeInit</STRONG> (Thumb, 324 bytes, Stack size 0 bytes, stm32f4xx_dma.o(i.DMA_DeInit))
<BR><BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::Equips_USART_Tx_DMA_Config()
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::Equips_USART_Rx_DMA_Config(unsigned, unsigned)
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::Ctrl_USART_Tx_DMA_Config()
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::Ctrl_USART_Rx_DMA_Config(unsigned, unsigned)
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::PC_USART_Tx_DMA_Config()
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::PC_USART_Rx_DMA_Config(unsigned, unsigned)
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::BL_USART_Tx_DMA_Config()
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::BL_USART_Rx_DMA_Config(unsigned, unsigned)
</UL>

<P><STRONG><a name="[d4]"></a>DMA_GetFlagStatus</STRONG> (Thumb, 54 bytes, Stack size 12 bytes, stm32f4xx_dma.o(i.DMA_GetFlagStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = DMA_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Stream7_IRQHandler
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Stream5_IRQHandler
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream6_IRQHandler
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream5_IRQHandler
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream4_IRQHandler
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream3_IRQHandler
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream2_IRQHandler
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream1_IRQHandler
</UL>

<P><STRONG><a name="[170]"></a>DMA_ITConfig</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, stm32f4xx_dma.o(i.DMA_ITConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::Equips_USART_Tx_DMA_Config()
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::Equips_USART_Rx_DMA_Config(unsigned, unsigned)
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::Ctrl_USART_Tx_DMA_Config()
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::Ctrl_USART_Rx_DMA_Config(unsigned, unsigned)
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::PC_USART_Tx_DMA_Config()
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::PC_USART_Rx_DMA_Config(unsigned, unsigned)
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::BL_USART_Tx_DMA_Config()
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::BL_USART_Rx_DMA_Config(unsigned, unsigned)
</UL>

<P><STRONG><a name="[16e]"></a>DMA_Init</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, stm32f4xx_dma.o(i.DMA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::Equips_USART_Tx_DMA_Config()
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::Equips_USART_Rx_DMA_Config(unsigned, unsigned)
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::Ctrl_USART_Tx_DMA_Config()
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::Ctrl_USART_Rx_DMA_Config(unsigned, unsigned)
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::PC_USART_Tx_DMA_Config()
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::PC_USART_Rx_DMA_Config(unsigned, unsigned)
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::BL_USART_Tx_DMA_Config()
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::BL_USART_Rx_DMA_Config(unsigned, unsigned)
</UL>

<P><STRONG><a name="[117]"></a>DMA_SetCurrDataCounter</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_dma.o(i.DMA_SetCurrDataCounter))
<BR><BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg_byDMA(DMA_Stream_TypeDef*, unsigned)
</UL>

<P><STRONG><a name="[1d]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[121]"></a>GPIO_Init</STRONG> (Thumb, 144 bytes, Stack size 20 bytes, stm32f4xx_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::BlueTooth_USART_Config()
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::Equips_USART_Config()
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::Ctrl_USART_Config()
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::Map_USART_Config()
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::PC_USART_Config()
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_TIM_Config()
</UL>

<P><STRONG><a name="[120]"></a>GPIO_PinAFConfig</STRONG> (Thumb, 70 bytes, Stack size 20 bytes, stm32f4xx_gpio.o(i.GPIO_PinAFConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_PinAFConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::BlueTooth_USART_Config()
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::Equips_USART_Config()
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::Ctrl_USART_Config()
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::Map_USART_Config()
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::PC_USART_Config()
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_TIM_Config()
</UL>

<P><STRONG><a name="[18]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.MemManage_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[161]"></a>NVIC_Init</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, misc.o(i.NVIC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::NVIC_Configuration()
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to TIMs_c]::WatchDogTIM_NVIC_Config()
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to TIMs_c]::ScheduleTIM_NVIC_Config()
</UL>

<P><STRONG><a name="[14e]"></a>NVIC_PriorityGroupConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, misc.o(i.NVIC_PriorityGroupConfig))
<BR><BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;baseInit()
</UL>

<P><STRONG><a name="[1e]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[11f]"></a>RCC_AHB1PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_AHB1PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::BlueTooth_USART_Config()
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::Equips_USART_Config()
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::Ctrl_USART_Config()
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::Map_USART_Config()
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::PC_USART_Config()
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_TIM_Config()
</UL>

<P><STRONG><a name="[11e]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_APB1PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::BlueTooth_USART_Config()
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::Equips_USART_Config()
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::Ctrl_USART_Config()
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::Map_USART_Config()
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDogTIM_Config()
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScheduleTIM_Config()
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_TIM_Config()
</UL>

<P><STRONG><a name="[163]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_APB2PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::PC_USART_Config()
</UL>

<P><STRONG><a name="[eb]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 214 bytes, Stack size 20 bytes, stm32f4xx_rcc.o(i.RCC_GetClocksFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[1c]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[7c]"></a>SystemInit</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, system_stm32f4xx.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SystemInit &rArr; [local to system_stm32f4xx_c]::SetSysClock()
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to system_stm32f4xx_c]::SetSysClock()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(.text)
</UL>
<P><STRONG><a name="[56]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32f4xx_it.o(i.TIM6_DAC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = TIM6_DAC_IRQHandler &rArr; Bark() &rArr; BeepingON(unsigned short) &rArr; TIM_CCxCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bark()
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetFlagStatus
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>TIM7_IRQHandler</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, stm32f4xx_it.o(i.TIM7_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 928<LI>Call Chain = TIM7_IRQHandler &rArr; Loops() &rArr; [local to Schedule_c]::Loop_200Hz() &rArr; UpdateRealCoordinate() &rArr; [local to Map_c]::CorrectCoordinateIncrement(Point) &rArr; Matrix::operator *(const Matrix&) &rArr; Matrix::Matrix(const Matrix&) &rArr; Matrix::CreatMatrixFrame(void*, unsigned, unsigned) &rArr; Matrix::CreatArray(unsigned, unsigned) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const char*) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Loops()
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetFlagStatus
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[ed]"></a>TIM_CCxCmd</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, stm32f4xx_tim.o(i.TIM_CCxCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_CCxCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepingON(unsigned short)
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepingOFF()
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_TIM_Config()
</UL>

<P><STRONG><a name="[e2]"></a>TIM_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM7_IRQHandler
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_DAC_IRQHandler
</UL>

<P><STRONG><a name="[125]"></a>TIM_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDogTIM_Config()
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScheduleTIM_Config()
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_TIM_Config()
</UL>

<P><STRONG><a name="[e0]"></a>TIM_GetFlagStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM7_IRQHandler
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_DAC_IRQHandler
</UL>

<P><STRONG><a name="[134]"></a>TIM_ITConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_ITConfig))
<BR><BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDogTIM_Config()
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScheduleTIM_Config()
</UL>

<P><STRONG><a name="[123]"></a>TIM_OC3Init</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, stm32f4xx_tim.o(i.TIM_OC3Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM_OC3Init
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_TIM_Config()
</UL>

<P><STRONG><a name="[124]"></a>TIM_OC3PreloadConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_OC3PreloadConfig))
<BR><BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_TIM_Config()
</UL>

<P><STRONG><a name="[154]"></a>TIM_SetAutoreload</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_SetAutoreload))
<BR><BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepingON(unsigned short)
</UL>

<P><STRONG><a name="[155]"></a>TIM_SetCompare3</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_SetCompare3))
<BR><BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepingON(unsigned short)
</UL>

<P><STRONG><a name="[122]"></a>TIM_TimeBaseInit</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_TimeBaseInit))
<BR><BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDogTIM_Config()
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScheduleTIM_Config()
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_TIM_Config()
</UL>

<P><STRONG><a name="[72]"></a>UART7_IRQHandler</STRONG> (Thumb, 350 bytes, Stack size 8 bytes, stm32f4xx_it.o(i.UART7_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UART7_IRQHandler &rArr; USART_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FeedDog(FlagsTypes)
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearITPendingBit
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[e5]"></a>USART_ClearFlag</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_usart.o(i.USART_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART7_IRQHandler
</UL>

<P><STRONG><a name="[e8]"></a>USART_ClearITPendingBit</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, stm32f4xx_usart.o(i.USART_ClearITPendingBit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USART_ClearITPendingBit
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART7_IRQHandler
</UL>

<P><STRONG><a name="[166]"></a>USART_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_usart.o(i.USART_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::BlueTooth_USART_Config()
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::Equips_USART_Config()
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::Ctrl_USART_Config()
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::Map_USART_Config()
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::PC_USART_Config()
</UL>

<P><STRONG><a name="[171]"></a>USART_DMACmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_usart.o(i.USART_DMACmd))
<BR><BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::Equips_USART_Tx_DMA_Config()
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::Equips_USART_Rx_DMA_Config(unsigned, unsigned)
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::Ctrl_USART_Tx_DMA_Config()
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::Ctrl_USART_Rx_DMA_Config(unsigned, unsigned)
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::PC_USART_Tx_DMA_Config()
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::PC_USART_Rx_DMA_Config(unsigned, unsigned)
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::BL_USART_Tx_DMA_Config()
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::BL_USART_Rx_DMA_Config(unsigned, unsigned)
</UL>

<P><STRONG><a name="[e4]"></a>USART_GetFlagStatus</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_usart.o(i.USART_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART7_IRQHandler
</UL>

<P><STRONG><a name="[e7]"></a>USART_GetITStatus</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, stm32f4xx_usart.o(i.USART_GetITStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USART_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART7_IRQHandler
</UL>

<P><STRONG><a name="[167]"></a>USART_ITConfig</STRONG> (Thumb, 74 bytes, Stack size 20 bytes, stm32f4xx_usart.o(i.USART_ITConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = USART_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::BlueTooth_USART_Config()
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::Map_USART_Config()
</UL>

<P><STRONG><a name="[ea]"></a>USART_Init</STRONG> (Thumb, 204 bytes, Stack size 48 bytes, stm32f4xx_usart.o(i.USART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::BlueTooth_USART_Config()
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::Equips_USART_Config()
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::Ctrl_USART_Config()
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::Map_USART_Config()
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::PC_USART_Config()
</UL>

<P><STRONG><a name="[e6]"></a>USART_ReceiveData</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_usart.o(i.USART_ReceiveData))
<BR><BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART7_IRQHandler
</UL>

<P><STRONG><a name="[e9]"></a>USART_SendData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_usart.o(i.USART_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART7_IRQHandler
</UL>

<P><STRONG><a name="[1b]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.UsageFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429_439xx.o(RESET)
</UL>
<P><STRONG><a name="[ec]"></a>BeepingOFF()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, beep.o(i._Z10BeepingOFFv))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = BeepingOFF() &rArr; TIM_CCxCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShutUp()
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitCompleteFlag(InitTypes)
</UL>

<P><STRONG><a name="[ee]"></a>CreatCurve(double, double, unsigned)</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, vol_curve.o(i._Z10CreatCurveddj))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = CreatCurve(double, double, unsigned) &rArr; [local to Vol_curve_c]::Distance_curve(double, double, unsigned, Vol_CurveType*) &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to Vol_curve_c]::Distance_curve(double, double, unsigned, Vol_CurveType*)
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AfterGetAim(double, double, unsigned)
</UL>

<P><STRONG><a name="[f0]"></a>CreateLine(Point, Point)</STRONG> (Thumb, 228 bytes, Stack size 96 bytes, planeanalyticgeometry.o(i._Z10CreateLine5PointS_))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = CreateLine(Point, Point) &rArr; CreateLine(Point, double, bool) &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateLine(Point, double, bool)
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatMoveLine(MoveInLine*, double, double, Coordinate*)
</UL>

<P><STRONG><a name="[f4]"></a>CreateLine(Point, double, bool)</STRONG> (Thumb, 278 bytes, Stack size 112 bytes, planeanalyticgeometry.o(i._Z10CreateLine5Pointdb))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = CreateLine(Point, double, bool) &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateLine(Point, Point)
</UL>

<P><STRONG><a name="[f6]"></a>SpecialAct(SpecialActions&, unsigned char&)</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, actionctrl.o(i._Z10SpecialActR14SpecialActionsRh))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SpecialAct(SpecialActions&, unsigned char&)
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitCylinderState()
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to ActionCtrl_c]::WaitforActFinished(bool&)
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CarryOutAction(SpecialActions&, unsigned char&)
</UL>

<P><STRONG><a name="[f9]"></a>AfterGetAim(double, double, unsigned)</STRONG> (Thumb, 120 bytes, Stack size 64 bytes, motion_ctrl.o(i._Z11AfterGetAimddj))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = AfterGetAim(double, double, unsigned) &rArr; CreatMoveLine(MoveInLine*, double, double, Coordinate*) &rArr; CreateLine(Point, Point) &rArr; CreateLine(Point, double, bool) &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getEndDistance(double, PID)
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatMoveLine(MoveInLine*, double, double, Coordinate*)
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatCurve(double, double, unsigned)
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReceiveDataFromMaster_Buffer(CMD_BufferType)
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GoToSpecialPoints(MovePointsType*, MovePointsMarkType*, MovePointsMarkType)
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Controler_handle()
</UL>

<P><STRONG><a name="[fc]"></a>AimMode_Loop()</STRONG> (Thumb, 572 bytes, Stack size 128 bytes, motion_ctrl.o(i._Z12AimMode_Loopv))
<BR><BR>[Stack]<UL><LI>Max Depth = 504<LI>Call Chain = AimMode_Loop() &rArr; MixSpeed(double, double, double, MoveInLine, Coordinate, int*, double*) &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetI(PID*)
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to Motion_Ctrl_c]::distanceCal(double, double, double, double, double*, double*)
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MixSpeed(double, double, double, MoveInLine, Coordinate, int*, double*)
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;END_Loop(double)
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CurveLoop(double)
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Base_Loop()
</UL>

<P><STRONG><a name="[103]"></a>SendDataToPC()</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, interfacetomicropc.o(i._Z12SendDataToPCv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SendDataToPC() &rArr; SendMsg_byDMA(DMA_Stream_TypeDef*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg_byDMA(DMA_Stream_TypeDef*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to Schedule_c]::Loop_50Hz()
</UL>

<P><STRONG><a name="[105]"></a>USART_Config()</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, usart.o(i._Z12USART_Configv))
<BR><BR>[Stack]<UL><LI>Max Depth = 776<LI>Call Chain = USART_Config() &rArr; [local to USART_c]::Map_Config() &rArr; MapParamsInit() &rArr; Matrix::getE(unsigned) &rArr; Matrix::Matrix(const Matrix&) &rArr; Matrix::CreatMatrixFrame(void*, unsigned, unsigned) &rArr; Matrix::CreatArray(unsigned, unsigned) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const char*) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::BlueTooth_USART_Config()
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::Equips_USART_Config()
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::NVIC_Configuration()
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::Ctrl_USART_Config()
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::PC_USART_Config()
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::Map_Config()
</UL>
<BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;baseInit()
</UL>

<P><STRONG><a name="[10c]"></a>WatchDogInit()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, watchdog.o(i._Z12WatchDogInitv))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = WatchDogInit() &rArr; WatchDogTIM_Config() &rArr; [local to TIMs_c]::WatchDogTIM_NVIC_Config() &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to WatchDog_c]::WatchDogParaInit()
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDogTIM_Config()
</UL>
<BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;baseInit()
</UL>

<P><STRONG><a name="[fa]"></a>CreatMoveLine(MoveInLine*, double, double, Coordinate*)</STRONG> (Thumb, 384 bytes, Stack size 96 bytes, positionctrl.o(i._Z13CreatMoveLineP10MoveInLineddP10Coordinate))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = CreatMoveLine(MoveInLine*, double, double, Coordinate*) &rArr; CreateLine(Point, Point) &rArr; CreateLine(Point, double, bool) &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateLine(Point, Point)
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AfterGetAim(double, double, unsigned)
</UL>

<P><STRONG><a name="[150]"></a>CtrlPara_Init()</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, base.o(i._Z13CtrlPara_Initv))
<BR><BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;baseInit()
</UL>

<P><STRONG><a name="[110]"></a>MapParamsInit()</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, map.o(i._Z13MapParamsInitv))
<BR><BR>[Stack]<UL><LI>Max Depth = 760<LI>Call Chain = MapParamsInit() &rArr; Matrix::getE(unsigned) &rArr; Matrix::Matrix(const Matrix&) &rArr; Matrix::CreatMatrixFrame(void*, unsigned, unsigned) &rArr; Matrix::CreatArray(unsigned, unsigned) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const char*) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::operator =(const Matrix&)
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::~Matrix()
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::getE(unsigned)
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to Map_c]::SetOrigin()
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::Map_Config()
</UL>

<P><STRONG><a name="[114]"></a>OpenMode_Loop()</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, motion_ctrl.o(i._Z13OpenMode_Loopv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = OpenMode_Loop() &rArr; __aeabi_i2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
</UL>
<BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Base_Loop()
</UL>

<P><STRONG><a name="[115]"></a>PIDdataUpdate(PID*)</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, pid.o(i._Z13PIDdataUpdateP3PID))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PIDdataUpdate(PID*)
</UL>
<BR>[Calls]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;constrain_int32(int, int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;END_Loop(double)
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Line_Location_Loop(MoveInLine)
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CurveLoop(double)
</UL>

<P><STRONG><a name="[104]"></a>SendMsg_byDMA(DMA_Stream_TypeDef*, unsigned)</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, usart.o(i._Z13SendMsg_byDMAP18DMA_Stream_TypeDefj))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SendMsg_byDMA(DMA_Stream_TypeDef*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_SetCurrDataCounter
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendDataToPC()
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendDataToMaster()
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendDataToEquips()
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendDataToF103(unsigned char)
</UL>

<P><STRONG><a name="[12b]"></a>SendStateScan()</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, actionctrl.o(i._Z13SendStateScanv))
<BR><BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendDataToEquips()
</UL>

<P><STRONG><a name="[118]"></a>AimAngleUpdate(double)</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, base.o(i._Z14AimAngleUpdated))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = AimAngleUpdate(double) &rArr; __aeabi_d2iz
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReceiveDataFromMaster_Buffer(CMD_BufferType)
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GoToSpecialPoints(MovePointsType*, MovePointsMarkType*, MovePointsMarkType)
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Controler_handle()
</UL>

<P><STRONG><a name="[119]"></a>CarryOutAction(SpecialActions&, unsigned char&)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, process.o(i._Z14CarryOutActionR14SpecialActionsRh))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = CarryOutAction(SpecialActions&, unsigned char&) &rArr; SpecialAct(SpecialActions&, unsigned char&)
</UL>
<BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpecialAct(SpecialActions&, unsigned char&)
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[151]"></a>CurveParamInit()</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, vol_curve.o(i._Z14CurveParamInitv))
<BR><BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;baseInit()
</UL>

<P><STRONG><a name="[14f]"></a>MovePointsInit(MovePointsType*)</STRONG> (Thumb, 124 bytes, Stack size 0 bytes, process.o(i._Z14MovePointsInitP14MovePointsType))
<BR><BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;baseInit()
</UL>

<P><STRONG><a name="[13b]"></a>PIDparamUpdate(PID*, unsigned short, unsigned short, unsigned short, int, int)</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, pid.o(i._Z14PIDparamUpdateP3PIDtttii))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = PIDparamUpdate(PID*, unsigned short, unsigned short, unsigned short, int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReceiveDataFromMaster_Buffer(CMD_BufferType)
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIDInit()
</UL>

<P><STRONG><a name="[11a]"></a>PromptToneScan()</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, base.o(i._Z14PromptToneScanv))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = PromptToneScan() &rArr; InitCompleteFlag(InitTypes) &rArr; BeepingON(unsigned short) &rArr; TIM_CCxCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitCompleteFlag(InitTypes)
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[11c]"></a>SendDataToF103(unsigned char)</STRONG> (Thumb, 182 bytes, Stack size 16 bytes, interfacetof103.o(i._Z14SendDataToF103h))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SendDataToF103(unsigned char) &rArr; __aeabi_d2iz
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg_byDMA(DMA_Stream_TypeDef*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to Schedule_c]::Loop_200Hz()
</UL>

<P><STRONG><a name="[1cb]"></a>SpinDeviceCtrl(SpinPositionType)</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, actionctrl.o(i._Z14SpinDeviceCtrl16SpinPositionType))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[fb]"></a>getEndDistance(double, PID)</STRONG> (Thumb, 114 bytes, Stack size 72 bytes, positionctrl.o(i._Z14getEndDistanced3PID))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = getEndDistance(double, PID) &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AfterGetAim(double, double, unsigned)
</UL>

<P><STRONG><a name="[11d]"></a>Beep_TIM_Config()</STRONG> (Thumb, 182 bytes, Stack size 48 bytes, tims.o(i._Z15Beep_TIM_Configv))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = Beep_TIM_Config() &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC3PreloadConfig
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC3Init
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepInit()
</UL>

<P><STRONG><a name="[116]"></a>constrain_int32(int, int, int)</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, pid.o(i._Z15constrain_int32iii))
<BR><BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPID(PID*)
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIDdataUpdate(PID*)
</UL>

<P><STRONG><a name="[153]"></a>saveAimPosition()</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, base.o(i._Z15saveAimPositionv))
<BR><BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Base_Loop()
</UL>

<P><STRONG><a name="[db]"></a>CleanActionFlags()</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, actionctrl.o(i._Z16CleanActionFlagsv))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream4_IRQHandler
</UL>

<P><STRONG><a name="[126]"></a>Controler_handle()</STRONG> (Thumb, 1280 bytes, Stack size 24 bytes, control.o(i._Z16Controler_handlev))
<BR><BR>[Stack]<UL><LI>Max Depth = 480<LI>Call Chain = Controler_handle() &rArr; AfterGetAim(double, double, unsigned) &rArr; CreatMoveLine(MoveInLine*, double, double, Coordinate*) &rArr; CreateLine(Point, Point) &rArr; CreateLine(Point, double, bool) &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T_cal()
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AimAngleUpdate(double)
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AfterGetAim(double, double, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to Schedule_c]::Loop_20Hz()
</UL>

<P><STRONG><a name="[11b]"></a>InitCompleteFlag(InitTypes)</STRONG> (Thumb, 138 bytes, Stack size 8 bytes, beep.o(i._Z16InitCompleteFlag9InitTypes))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = InitCompleteFlag(InitTypes) &rArr; BeepingON(unsigned short) &rArr; TIM_CCxCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepingON(unsigned short)
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms(unsigned)
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepingOFF()
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PromptToneScan()
</UL>

<P><STRONG><a name="[12a]"></a>SendDataToEquips()</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, interfacetoequips.o(i._Z16SendDataToEquipsv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SendDataToEquips() &rArr; SendMsg_byDMA(DMA_Stream_TypeDef*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg_byDMA(DMA_Stream_TypeDef*, unsigned)
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendStateScan()
</UL>
<BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to Schedule_c]::Loop_50Hz()
</UL>

<P><STRONG><a name="[12c]"></a>SendDataToMaster()</STRONG> (Thumb, 196 bytes, Stack size 16 bytes, interfacetomaster.o(i._Z16SendDataToMasterv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SendDataToMaster() &rArr; __aeabi_d2iz
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg_byDMA(DMA_Stream_TypeDef*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to Schedule_c]::Loop_50Hz()
</UL>

<P><STRONG><a name="[12d]"></a>GetDistanceToLine(Point, Line)</STRONG> (Thumb, 238 bytes, Stack size 80 bytes, planeanalyticgeometry.o(i._Z17GetDistanceToLine5Point4Line))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = GetDistanceToLine(Point, Line) &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fabs
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Line_Location_Loop(MoveInLine)
</UL>

<P><STRONG><a name="[12f]"></a>GoToSpecialPoints(MovePointsType*, MovePointsMarkType*, MovePointsMarkType)</STRONG> (Thumb, 320 bytes, Stack size 32 bytes, process.o(i._Z17GoToSpecialPointsP14MovePointsTypeP18MovePointsMarkTypeS1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 488<LI>Call Chain = GoToSpecialPoints(MovePointsType*, MovePointsMarkType*, MovePointsMarkType) &rArr; AfterGetAim(double, double, unsigned) &rArr; CreatMoveLine(MoveInLine*, double, double, Coordinate*) &rArr; CreateLine(Point, Point) &rArr; CreateLine(Point, double, bool) &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AimAngleUpdate(double)
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AfterGetAim(double, double, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f7]"></a>InitCylinderState()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interfacetoequips.o(i._Z17InitCylinderStatev))
<BR><BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;baseInit()
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpecialAct(SpecialActions&, unsigned char&)
</UL>

<P><STRONG><a name="[130]"></a>Schedule_TIM_Init()</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, schedule.o(i._Z17Schedule_TIM_Initv))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Schedule_TIM_Init() &rArr; ScheduleTIM_Config() &rArr; [local to TIMs_c]::ScheduleTIM_NVIC_Config() &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScheduleTIM_Config()
</UL>
<BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;baseInit()
</UL>

<P><STRONG><a name="[132]"></a>Line_Location_Loop(MoveInLine)</STRONG> (Thumb, 142 bytes, Stack size 64 bytes, positionctrl.o(i._Z18Line_Location_Loop10MoveInLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = Line_Location_Loop(MoveInLine) &rArr; GetDistanceToLine(Point, Line) &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDistanceToLine(Point, Line)
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPID(PID*)
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIDdataUpdate(PID*)
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CurveLoop(double)
</UL>

<P><STRONG><a name="[131]"></a>ScheduleTIM_Config()</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, tims.o(i._Z18ScheduleTIM_Configv))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ScheduleTIM_Config() &rArr; [local to TIMs_c]::ScheduleTIM_NVIC_Config() &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to TIMs_c]::ScheduleTIM_NVIC_Config()
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Schedule_TIM_Init()
</UL>

<P><STRONG><a name="[10e]"></a>WatchDogTIM_Config()</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, tims.o(i._Z18WatchDogTIM_Configv))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = WatchDogTIM_Config() &rArr; [local to TIMs_c]::WatchDogTIM_NVIC_Config() &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to TIMs_c]::WatchDogTIM_NVIC_Config()
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDogInit()
</UL>

<P><STRONG><a name="[137]"></a>UpdateRealCoordinate()</STRONG> (Thumb, 156 bytes, Stack size 48 bytes, map.o(i._Z20UpdateRealCoordinatev))
<BR><BR>[Stack]<UL><LI>Max Depth = 904<LI>Call Chain = UpdateRealCoordinate() &rArr; [local to Map_c]::CorrectCoordinateIncrement(Point) &rArr; Matrix::operator *(const Matrix&) &rArr; Matrix::Matrix(const Matrix&) &rArr; Matrix::CreatMatrixFrame(void*, unsigned, unsigned) &rArr; Matrix::CreatArray(unsigned, unsigned) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const char*) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to Map_c]::CorrectCoordinateIncrement(Point)
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to Map_c]::getCurrentCoordIncrement(Coordinate, Coordinate)
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to Map_c]::GetOriginalCoordinate(motion_status, Coordinate&)
</UL>
<BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to Schedule_c]::Loop_200Hz()
</UL>

<P><STRONG><a name="[d7]"></a>DMA_ReceiveSet_Change(unsigned, unsigned, unsigned, unsigned)</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, usart.o(i._Z21DMA_ReceiveSet_Changejjjj))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DMA_ReceiveSet_Change(unsigned, unsigned, unsigned, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Stream5_IRQHandler
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream5_IRQHandler
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream2_IRQHandler
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream1_IRQHandler
</UL>

<P><STRONG><a name="[de]"></a>ReceiveDataFromPC_Buffer(PC_Rx_BufferType)</STRONG> (Thumb, 156 bytes, Stack size 24 bytes, interfacetomicropc.o(i._Z24ReceiveDataFromPC_Buffer16PC_Rx_BufferType))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ReceiveDataFromPC_Buffer(PC_Rx_BufferType)
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Stream5_IRQHandler
</UL>

<P><STRONG><a name="[dc]"></a>ReceiveDataFromF103_Buffer(F1_Rx_BufferType)</STRONG> (Thumb, 190 bytes, Stack size 32 bytes, interfacetof103.o(i._Z26ReceiveDataFromF103_Buffer16F1_Rx_BufferType))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = ReceiveDataFromF103_Buffer(F1_Rx_BufferType) &rArr; __aeabi_i2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream5_IRQHandler
</UL>

<P><STRONG><a name="[da]"></a>ReceiveDataFromEquips_Buffer(Eq_Rx_BufferType)</STRONG> (Thumb, 250 bytes, Stack size 32 bytes, interfacetoequips.o(i._Z28ReceiveDataFromEquips_Buffer16Eq_Rx_BufferType))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = ReceiveDataFromEquips_Buffer(Eq_Rx_BufferType) &rArr; __aeabi_i2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream2_IRQHandler
</UL>

<P><STRONG><a name="[d9]"></a>ReceiveDataFromMaster_Buffer(CMD_BufferType)</STRONG> (Thumb, 630 bytes, Stack size 56 bytes, interfacetomaster.o(i._Z28ReceiveDataFromMaster_Buffer14CMD_BufferType))
<BR><BR>[Stack]<UL><LI>Max Depth = 512<LI>Call Chain = ReceiveDataFromMaster_Buffer(CMD_BufferType) &rArr; AfterGetAim(double, double, unsigned) &rArr; CreatMoveLine(MoveInLine*, double, double, Coordinate*) &rArr; CreateLine(Point, Point) &rArr; CreateLine(Point, double, bool) &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FeedDog(FlagsTypes)
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIDparamUpdate(PID*, unsigned short, unsigned short, unsigned short, int, int)
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AimAngleUpdate(double)
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AfterGetAim(double, double, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream1_IRQHandler
</UL>

<P><STRONG><a name="[e1]"></a>Bark()</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, watchdog.o(i._Z4Barkv))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Bark() &rArr; BeepingON(unsigned short) &rArr; TIM_CCxCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to WatchDog_c]::Checkflags(Flags&)
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepingON(unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_DAC_IRQHandler
</UL>

<P><STRONG><a name="[e3]"></a>Loops()</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, schedule.o(i._Z5Loopsv))
<BR><BR>[Stack]<UL><LI>Max Depth = 920<LI>Call Chain = Loops() &rArr; [local to Schedule_c]::Loop_200Hz() &rArr; UpdateRealCoordinate() &rArr; [local to Map_c]::CorrectCoordinateIncrement(Point) &rArr; Matrix::operator *(const Matrix&) &rArr; Matrix::Matrix(const Matrix&) &rArr; Matrix::CreatMatrixFrame(void*, unsigned, unsigned) &rArr; Matrix::CreatArray(unsigned, unsigned) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const char*) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to Schedule_c]::Loop_50Hz()
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to Schedule_c]::Loop_20Hz()
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to Schedule_c]::Loop_1000Hz()
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to Schedule_c]::Loop_200Hz()
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM7_IRQHandler
</UL>

<P><STRONG><a name="[127]"></a>T_cal()</STRONG> (Thumb, 256 bytes, Stack size 24 bytes, control.o(i._Z5T_calv))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = T_cal() &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrtf
</UL>
<BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Controler_handle()
</UL>

<P><STRONG><a name="[133]"></a>GetPID(PID*)</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, pid.o(i._Z6GetPIDP3PID))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GetPID(PID*)
</UL>
<BR>[Calls]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;constrain_int32(int, int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;END_Loop(double)
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Line_Location_Loop(MoveInLine)
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CurveLoop(double)
</UL>

<P><STRONG><a name="[ff]"></a>ResetI(PID*)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, pid.o(i._Z6ResetIP3PID))
<BR><BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AimMode_Loop()
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;END_Loop(double)
</UL>

<P><STRONG><a name="[142]"></a>ShutUp()</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, watchdog.o(i._Z6ShutUpv))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = ShutUp() &rArr; BeepingOFF() &rArr; TIM_CCxCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepingOFF()
</UL>
<BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to Schedule_c]::Loop_200Hz()
</UL>

<P><STRONG><a name="[dd]"></a>FeedDog(FlagsTypes)</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, watchdog.o(i._Z7FeedDog10FlagsTypes))
<BR><BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReceiveDataFromMaster_Buffer(CMD_BufferType)
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART7_IRQHandler
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Stream5_IRQHandler
</UL>

<P><STRONG><a name="[158]"></a>GiveACK()</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, actionctrl.o(i._Z7GiveACKv))
<BR><BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flagCheck()
</UL>

<P><STRONG><a name="[143]"></a>PIDInit()</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, motion_ctrl.o(i._Z7PIDInitv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = PIDInit() &rArr; PIDparamUpdate(PID*, unsigned short, unsigned short, unsigned short, int, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIDparamUpdate(PID*, unsigned short, unsigned short, unsigned short, int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;baseInit()
</UL>

<P><STRONG><a name="[144]"></a>catgets(__rw::__rw_cat*, int, int, const char*)</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, rwcats.o(i._Z7catgetsPN4__rw8__rw_catEiiPKc))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = catgets(__rw::__rw_cat*, int, int, const char*) &rArr; __rw::__catfind(__rw::__rw_cat*)
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__catfind(__rw::__rw_cat*)
</UL>
<BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_messages_base::_C_get_message(int, int, int) const
</UL>

<P><STRONG><a name="[146]"></a>catopen(const char*, int)</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, rwcats.o(i._Z7catopenPKci))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = catopen(const char*, int) &rArr; operator new(unsigned) &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_messages_base::_C_cat_open(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&, const std::locale&) const
</UL>

<P><STRONG><a name="[149]"></a>BeepInit()</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, beep.o(i._Z8BeepInitv))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = BeepInit() &rArr; Beep_TIM_Config() &rArr; GPIO_PinAFConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_TIM_Config()
</UL>
<BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;baseInit()
</UL>

<P><STRONG><a name="[100]"></a>END_Loop(double)</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, positionctrl.o(i._Z8END_Loopd))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = END_Loop(double) &rArr; __aeabi_d2iz
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetI(PID*)
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPID(PID*)
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIDdataUpdate(PID*)
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AimMode_Loop()
</UL>

<P><STRONG><a name="[102]"></a>MixSpeed(double, double, double, MoveInLine, Coordinate, int*, double*)</STRONG> (Thumb, 866 bytes, Stack size 136 bytes, positionctrl.o(i._Z8MixSpeedddd10MoveInLine10CoordinatePiPd))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = MixSpeed(double, double, double, MoveInLine, Coordinate, int*, double*) &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fmod
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fabs
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AimMode_Loop()
</UL>

<P><STRONG><a name="[14d]"></a>baseInit()</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, base.o(i._Z8baseInitv))
<BR><BR>[Stack]<UL><LI>Max Depth = 784<LI>Call Chain = baseInit() &rArr; USART_Config() &rArr; [local to USART_c]::Map_Config() &rArr; MapParamsInit() &rArr; Matrix::getE(unsigned) &rArr; Matrix::Matrix(const Matrix&) &rArr; Matrix::CreatMatrixFrame(void*, unsigned, unsigned) &rArr; Matrix::CreatArray(unsigned, unsigned) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const char*) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDogInit()
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BeepInit()
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Config()
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitCylinderState()
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Schedule_TIM_Init()
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MovePointsInit(MovePointsType*)
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CtrlPara_Init()
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIDInit()
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CurveParamInit()
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[129]"></a>delay_ms(unsigned)</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, beep.o(i._Z8delay_msj))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = delay_ms(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitCompleteFlag(InitTypes)
</UL>

<P><STRONG><a name="[152]"></a>Base_Loop()</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, base.o(i._Z9Base_Loopv))
<BR><BR>[Stack]<UL><LI>Max Depth = 512<LI>Call Chain = Base_Loop() &rArr; AimMode_Loop() &rArr; MixSpeed(double, double, double, MoveInLine, Coordinate, int*, double*) &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;saveAimPosition()
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenMode_Loop()
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AimMode_Loop()
</UL>
<BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to Schedule_c]::Loop_200Hz()
</UL>

<P><STRONG><a name="[128]"></a>BeepingON(unsigned short)</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, beep.o(i._Z9BeepingONt))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = BeepingON(unsigned short) &rArr; TIM_CCxCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare3
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetAutoreload
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CCxCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bark()
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitCompleteFlag(InitTypes)
</UL>

<P><STRONG><a name="[101]"></a>CurveLoop(double)</STRONG> (Thumb, 278 bytes, Stack size 104 bytes, vol_curve.o(i._Z9CurveLoopd))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = CurveLoop(double) &rArr; Line_Location_Loop(MoveInLine) &rArr; GetDistanceToLine(Point, Line) &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPID(PID*)
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIDdataUpdate(PID*)
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Line_Location_Loop(MoveInLine)
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AimMode_Loop()
</UL>

<P><STRONG><a name="[157]"></a>flagCheck()</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, actionctrl.o(i._Z9flagCheckv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = flagCheck()
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GiveACK()
</UL>
<BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to Schedule_c]::Loop_50Hz()
</UL>

<P><STRONG><a name="[17b]"></a>__rw::__rw_throw(int, ...)</STRONG> (Thumb, 86 bytes, Stack size 48 bytes, rwstdexcept.o(i._ZN4__rw10__rw_throwEiz))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::__rw_exception()
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::_C_vformat(int, std::__va_list)
</UL>
<BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_allocate(unsigned, int)
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_getRep(unsigned, unsigned)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned)
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const
</UL>

<P><STRONG><a name="[17e]"></a>__rw::__rw_allocate(unsigned, int)</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, rwalloc.o(i._ZN4__rw13__rw_allocateEji))
<BR><BR>[Stack]<UL><LI>Max Depth = 44 + In Cycle
<LI>Call Chain = __rw::__rw_allocate(unsigned, int) &rArr;  __rw::__rw_throw(int, ...) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw(int, ...)
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_getRep(unsigned, unsigned)
</UL>

<P><STRONG><a name="[17f]"></a>__rw::__rw_deallocate(void*, unsigned, int)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rwalloc.o(i._ZN4__rw15__rw_deallocateEPvji))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __rw::__rw_deallocate(void*, unsigned, int) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_unlink()
</UL>

<P><STRONG><a name="[93]"></a>__rw::__rw_facet_base::_C_initfacet(const std::locale&)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, char.o(i._ZN4__rw15__rw_facet_base12_C_initfacetERKSt6locale))
<BR>[Address Reference Count : 2]<UL><LI> rwstdexcept.o(.constdata__ZTVSt8messagesIcE)
<LI> rwstdexcept.o(.constdata__ZTVNSt6locale5facetE)
</UL>
<P><STRONG><a name="[180]"></a>__rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned)</STRONG> (Thumb, 226 bytes, Stack size 40 bytes, locale.o(i._ZN4__rw15__rw_locale_impC1EPKcjj))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = __rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned) &rArr; __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_new_cookie
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_delete
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const std::allocator&lang;char&rang;&)
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string()
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_init()
</UL>

<P><STRONG><a name="[1fd]"></a>__rw::__rw_locale_imp::__rw_locale_imp__sub_object(const char*, unsigned, unsigned)</STRONG> (Thumb, 0 bytes, Stack size 40 bytes, locale.o(i._ZN4__rw15__rw_locale_impC1EPKcjj), UNUSED)

<P><STRONG><a name="[185]"></a>__rw::__rw_locale_imp::~__rw_locale_imp()</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, locale.o(i._ZN4__rw15__rw_locale_impD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __rw::__rw_locale_imp::~__rw_locale_imp() &rArr; __rw::__rw_locale_vector&lang;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&rang;::~__rw_locale_vector() &rArr; __aeabi_vec_delete &rArr; __aeabi_vec_dtor_cookie &rArr; __aeabi_vec_dtor
</UL>
<BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&rang;::~__rw_locale_vector()
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;__rw::__rw_facet_base*&rang;::~__rw_locale_vector()
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::operator =(const std::locale&)
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::~locale()
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_init()
</UL>

<P><STRONG><a name="[1fe]"></a>__rw::__rw_locale_imp::~__rw_locale_imp__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, locale.o(i._ZN4__rw15__rw_locale_impD1Ev), UNUSED)

<P><STRONG><a name="[188]"></a>__rw::__rw_use_c_lib_locale::__rw_use_c_lib_locale(const char*, int)</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, locale.o(i._ZN4__rw21__rw_use_c_lib_localeC1EPKci))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = __rw::__rw_use_c_lib_locale::__rw_use_c_lib_locale(const char*, int) &rArr; operator new[] (unsigned) &rArr; operator new(unsigned) &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::_C_initfacet(const std::locale&)
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype_byname&lang;char&rang;::_C_get_mask_table(const char*)
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype_byname&lang;char&rang;::ctype_byname(const char*, unsigned)
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_messages_base::_C_cat_open(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&, const std::locale&) const
</UL>

<P><STRONG><a name="[1ff]"></a>__rw::__rw_use_c_lib_locale::__rw_use_c_lib_locale__sub_object(const char*, int)</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, locale.o(i._ZN4__rw21__rw_use_c_lib_localeC1EPKci), UNUSED)

<P><STRONG><a name="[18a]"></a>__rw::__rw_use_c_lib_locale::~__rw_use_c_lib_locale()</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, char.o(i._ZN4__rw21__rw_use_c_lib_localeD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __rw::__rw_use_c_lib_locale::~__rw_use_c_lib_locale() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::_C_initfacet(const std::locale&)
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype_byname&lang;char&rang;::_C_get_mask_table(const char*)
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype_byname&lang;char&rang;::ctype_byname(const char*, unsigned)
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_messages_base::_C_cat_open(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&, const std::locale&) const
</UL>

<P><STRONG><a name="[200]"></a>__rw::__rw_use_c_lib_locale::~__rw_use_c_lib_locale__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, char.o(i._ZN4__rw21__rw_use_c_lib_localeD1Ev), UNUSED)

<P><STRONG><a name="[15]"></a>__rw::__rw_throw_exception_noex(int, char*)</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, rwthrowproc_impl_noex.o(i._ZN4__rw25__rw_throw_exception_noexEiPc))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __rw::__rw_throw_exception_noex(int, char*) &rArr; fprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fprintf
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwthrowproc_noex.o(.data)
</UL>
<P><STRONG><a name="[145]"></a>__rw::__catfind(__rw::__rw_cat*)</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, rwcats.o(i._ZN4__rw9__catfindEPNS_8__rw_catE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __rw::__catfind(__rw::__rw_cat*)
</UL>
<BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;catgets(__rw::__rw_cat*, int, int, const char*)
</UL>

<P><STRONG><a name="[15a]"></a>Matrix::CreatArray(unsigned, unsigned)</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, matrix.o(i._ZN6Matrix10CreatArrayEjj))
<BR><BR>[Stack]<UL><LI>Max Depth = 544<LI>Call Chain = Matrix::CreatArray(unsigned, unsigned) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const char*) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::CreatedArreyType::CreatedArreyType()
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const char*)
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::operator *(const Matrix&)
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::getE(unsigned)
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to Map_c]::CorrectCoordinateIncrement(Point)
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::CreatMatrixFrame(void*, unsigned, unsigned)
</UL>

<P><STRONG><a name="[15c]"></a>Matrix::fillMatrix(Matrix::CreatedArreyType)</STRONG> (Thumb, 94 bytes, Stack size 40 bytes, matrix.o(i._ZN6Matrix10fillMatrixENS_16CreatedArreyTypeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 140 + In Cycle
<LI>Call Chain = Matrix::fillMatrix(Matrix::CreatedArreyType) &rArr;  Matrix::CreatMatrixFrame(Matrix::CreatedArreyType) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::CreatedArreyType::CreatedArreyType(const Matrix::CreatedArreyType&)
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::CreatedArreyType::~CreatedArreyType()
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::CreatMatrixFrame(Matrix::CreatedArreyType)
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to Map_c]::CorrectCoordinateIncrement(Point)
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::CreatMatrixFrame(void*, unsigned, unsigned)
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::CreatMatrixFrame(Matrix::CreatedArreyType)
</UL>

<P><STRONG><a name="[190]"></a>Matrix::fillMatrix(double*)</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, matrix.o(i._ZN6Matrix10fillMatrixEPd))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Matrix::fillMatrix(double*)
</UL>
<BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::CreatMatrixFrame(void*, unsigned, unsigned)
</UL>

<P><STRONG><a name="[15e]"></a>Matrix::DeleteArray(Matrix::CreatedArreyType)</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, matrix.o(i._ZN6Matrix11DeleteArrayENS_16CreatedArreyTypeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Matrix::DeleteArray(Matrix::CreatedArreyType) &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::operator *(const Matrix&)
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::getE(unsigned)
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to Map_c]::CorrectCoordinateIncrement(Point)
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::CreatMatrixFrame(void*, unsigned, unsigned)
</UL>

<P><STRONG><a name="[18e]"></a>Matrix::CreatMatrixFrame(Matrix::CreatedArreyType)</STRONG> (Thumb, 90 bytes, Stack size 40 bytes, matrix.o(i._ZN6Matrix16CreatMatrixFrameENS_16CreatedArreyTypeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = Matrix::CreatMatrixFrame(Matrix::CreatedArreyType) &rArr; Matrix::fillMatrix(Matrix::CreatedArreyType) &rArr;  Matrix::CreatMatrixFrame(Matrix::CreatedArreyType) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::fillMatrix(Matrix::CreatedArreyType)
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::CreatedArreyType::CreatedArreyType(const Matrix::CreatedArreyType&)
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::CreatedArreyType::~CreatedArreyType()
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::getE(unsigned)
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::fillMatrix(Matrix::CreatedArreyType)
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::operator =(const Matrix::CreatedArreyType&)
</UL>

<P><STRONG><a name="[18f]"></a>Matrix::CreatMatrixFrame(void*, unsigned, unsigned)</STRONG> (Thumb, 148 bytes, Stack size 64 bytes, matrix.o(i._ZN6Matrix16CreatMatrixFrameEPvjj))
<BR><BR>[Stack]<UL><LI>Max Depth = 608<LI>Call Chain = Matrix::CreatMatrixFrame(void*, unsigned, unsigned) &rArr; Matrix::CreatArray(unsigned, unsigned) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const char*) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::DeleteArray(Matrix::CreatedArreyType)
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::fillMatrix(Matrix::CreatedArreyType)
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::CreatArray(unsigned, unsigned)
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::CreatedArreyType::CreatedArreyType(const Matrix::CreatedArreyType&)
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::CreatedArreyType::~CreatedArreyType()
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::fillMatrix(double*)
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::operator =(const Matrix&)
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::Matrix(const Matrix&)
</UL>

<P><STRONG><a name="[15b]"></a>Matrix::CreatedArreyType::CreatedArreyType(const Matrix::CreatedArreyType&)</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, map.o(i._ZN6Matrix16CreatedArreyTypeC1ERKS0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = Matrix::CreatedArreyType::CreatedArreyType(const Matrix::CreatedArreyType&) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_getRep(unsigned, unsigned) &rArr;  __rw::__rw_throw(int, ...) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::operator *(const Matrix&)
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::getE(unsigned)
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::fillMatrix(Matrix::CreatedArreyType)
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to Map_c]::CorrectCoordinateIncrement(Point)
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::operator =(const Matrix::CreatedArreyType&)
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::CreatMatrixFrame(void*, unsigned, unsigned)
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::CreatMatrixFrame(Matrix::CreatedArreyType)
</UL>

<P><STRONG><a name="[201]"></a>Matrix::CreatedArreyType::CreatedArreyType__sub_object(const Matrix::CreatedArreyType&)</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, map.o(i._ZN6Matrix16CreatedArreyTypeC1ERKS0_), UNUSED)

<P><STRONG><a name="[18c]"></a>Matrix::CreatedArreyType::CreatedArreyType()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, matrix.o(i._ZN6Matrix16CreatedArreyTypeC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Matrix::CreatedArreyType::CreatedArreyType() &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const std::allocator&lang;char&rang;&)
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const std::allocator&lang;char&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::getE(unsigned)
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::CreatArray(unsigned, unsigned)
</UL>

<P><STRONG><a name="[202]"></a>Matrix::CreatedArreyType::CreatedArreyType__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, matrix.o(i._ZN6Matrix16CreatedArreyTypeC1Ev), UNUSED)

<P><STRONG><a name="[15d]"></a>Matrix::CreatedArreyType::~CreatedArreyType()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, matrix.o(i._ZN6Matrix16CreatedArreyTypeD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Matrix::CreatedArreyType::~CreatedArreyType() &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string() &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_unlink() &rArr; __rw::__rw_deallocate(void*, unsigned, int) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string()
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::operator *(const Matrix&)
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::getE(unsigned)
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::fillMatrix(Matrix::CreatedArreyType)
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to Map_c]::CorrectCoordinateIncrement(Point)
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::operator =(const Matrix::CreatedArreyType&)
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::CreatMatrixFrame(void*, unsigned, unsigned)
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::CreatMatrixFrame(Matrix::CreatedArreyType)
</UL>

<P><STRONG><a name="[203]"></a>Matrix::CreatedArreyType::~CreatedArreyType__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, matrix.o(i._ZN6Matrix16CreatedArreyTypeD1Ev), UNUSED)

<P><STRONG><a name="[191]"></a>Matrix::CreatedArreyType::operator =(Matrix::CreatedArreyType&&)</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, matrix.o(i._ZN6Matrix16CreatedArreyTypeaSEOS0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Matrix::CreatedArreyType::operator =(Matrix::CreatedArreyType&&) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&) &rArr;  std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::getE(unsigned)
</UL>

<P><STRONG><a name="[111]"></a>Matrix::getE(unsigned)</STRONG> (Thumb, 216 bytes, Stack size 104 bytes, matrix.o(i._ZN6Matrix4getEEj))
<BR><BR>[Stack]<UL><LI>Max Depth = 736<LI>Call Chain = Matrix::getE(unsigned) &rArr; Matrix::Matrix(const Matrix&) &rArr; Matrix::CreatMatrixFrame(void*, unsigned, unsigned) &rArr; Matrix::CreatArray(unsigned, unsigned) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const char*) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::~Matrix()
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::Matrix()
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::DeleteArray(Matrix::CreatedArreyType)
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::CreatArray(unsigned, unsigned)
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::CreatedArreyType::CreatedArreyType(const Matrix::CreatedArreyType&)
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::Matrix(const Matrix&)
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::CreatedArreyType::operator =(Matrix::CreatedArreyType&&)
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::CreatedArreyType::~CreatedArreyType()
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::CreatedArreyType::CreatedArreyType()
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::CreatMatrixFrame(Matrix::CreatedArreyType)
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MapParamsInit()
</UL>

<P><STRONG><a name="[192]"></a>Matrix::Matrix(const Matrix&)</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, matrix.o(i._ZN6MatrixC1ERKS_))
<BR><BR>[Stack]<UL><LI>Max Depth = 632<LI>Call Chain = Matrix::Matrix(const Matrix&) &rArr; Matrix::CreatMatrixFrame(void*, unsigned, unsigned) &rArr; Matrix::CreatArray(unsigned, unsigned) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const char*) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::getElementValue(unsigned, unsigned) const
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::getyOrder() const
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::getxOrder() const
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::CreatMatrixFrame(void*, unsigned, unsigned)
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const char*)
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const std::allocator&lang;char&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::operator *(const Matrix&)
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::getE(unsigned)
</UL>

<P><STRONG><a name="[204]"></a>Matrix::Matrix__sub_object(const Matrix&)</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, matrix.o(i._ZN6MatrixC1ERKS_), UNUSED)

<P><STRONG><a name="[159]"></a>Matrix::Matrix()</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, matrix.o(i._ZN6MatrixC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 536<LI>Call Chain = Matrix::Matrix() &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const char*) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const char*)
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const std::allocator&lang;char&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::operator *(const Matrix&)
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::getE(unsigned)
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___5_Map_c_1c83cf28
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to Map_c]::CorrectCoordinateIncrement(Point)
</UL>

<P><STRONG><a name="[205]"></a>Matrix::Matrix__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, matrix.o(i._ZN6MatrixC1Ev), UNUSED)

<P><STRONG><a name="[8e]"></a>Matrix::~Matrix()</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, matrix.o(i._ZN6MatrixD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Matrix::~Matrix() &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string() &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_unlink() &rArr; __rw::__rw_deallocate(void*, unsigned, int) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string()
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::operator *(const Matrix&)
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::getE(unsigned)
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to Map_c]::CorrectCoordinateIncrement(Point)
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MapParamsInit()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> map.o(i.__sti___5_Map_c_1c83cf28)
</UL>
<P><STRONG><a name="[206]"></a>Matrix::~Matrix__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, matrix.o(i._ZN6MatrixD1Ev), UNUSED)

<P><STRONG><a name="[195]"></a>Matrix::operator =(const Matrix::CreatedArreyType&)</STRONG> (Thumb, 110 bytes, Stack size 40 bytes, matrix.o(i._ZN6MatrixaSERKNS_16CreatedArreyTypeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = Matrix::operator =(const Matrix::CreatedArreyType&) &rArr; Matrix::CreatMatrixFrame(Matrix::CreatedArreyType) &rArr; Matrix::fillMatrix(Matrix::CreatedArreyType) &rArr;  Matrix::CreatMatrixFrame(Matrix::CreatedArreyType) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::CreatedArreyType::CreatedArreyType(const Matrix::CreatedArreyType&)
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::CreatedArreyType::~CreatedArreyType()
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::CreatMatrixFrame(Matrix::CreatedArreyType)
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::operator *(const Matrix&)
</UL>

<P><STRONG><a name="[112]"></a>Matrix::operator =(const Matrix&)</STRONG> (Thumb, 168 bytes, Stack size 24 bytes, matrix.o(i._ZN6MatrixaSERKS_))
<BR><BR>[Stack]<UL><LI>Max Depth = 632<LI>Call Chain = Matrix::operator =(const Matrix&) &rArr; Matrix::CreatMatrixFrame(void*, unsigned, unsigned) &rArr; Matrix::CreatArray(unsigned, unsigned) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const char*) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::getElementValue(unsigned, unsigned) const
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::getyOrder() const
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::getxOrder() const
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::CreatMatrixFrame(void*, unsigned, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to Map_c]::CorrectCoordinateIncrement(Point)
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MapParamsInit()
</UL>

<P><STRONG><a name="[15f]"></a>Matrix::operator *(const Matrix&)</STRONG> (Thumb, 250 bytes, Stack size 104 bytes, matrix.o(i._ZN6MatrixmlERKS_))
<BR><BR>[Stack]<UL><LI>Max Depth = 736<LI>Call Chain = Matrix::operator *(const Matrix&) &rArr; Matrix::Matrix(const Matrix&) &rArr; Matrix::CreatMatrixFrame(void*, unsigned, unsigned) &rArr; Matrix::CreatArray(unsigned, unsigned) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const char*) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::getElementValue(unsigned, unsigned) const
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::~Matrix()
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::Matrix()
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::DeleteArray(Matrix::CreatedArreyType)
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::CreatArray(unsigned, unsigned)
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::CreatedArreyType::CreatedArreyType(const Matrix::CreatedArreyType&)
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::getyOrder() const
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::getxOrder() const
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::operator =(const Matrix::CreatedArreyType&)
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::Matrix(const Matrix&)
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::CreatedArreyType::~CreatedArreyType()
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to Map_c]::CorrectCoordinateIncrement(Point)
</UL>

<P><STRONG><a name="[160]"></a>Matrix::getElementValue(unsigned, unsigned) const</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, matrix.o(i._ZNK6Matrix15getElementValueEjj))
<BR><BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::operator *(const Matrix&)
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::operator =(const Matrix&)
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to Map_c]::CorrectCoordinateIncrement(Point)
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::Matrix(const Matrix&)
</UL>

<P><STRONG><a name="[194]"></a>Matrix::getxOrder() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, matrix.o(i._ZNK6Matrix9getxOrderEv))
<BR><BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::operator *(const Matrix&)
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::operator =(const Matrix&)
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::Matrix(const Matrix&)
</UL>

<P><STRONG><a name="[193]"></a>Matrix::getyOrder() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, matrix.o(i._ZNK6Matrix9getyOrderEv))
<BR><BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::operator *(const Matrix&)
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::operator =(const Matrix&)
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::Matrix(const Matrix&)
</UL>

<P><STRONG><a name="[98]"></a>std::__rw_exception::what() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rwstdexcept.o(i._ZNKSt14__rw_exception4whatEv))
<BR>[Address Reference Count : 1]<UL><LI> rwstdexcept.o(.constdata__ZTVSt14__rw_exception)
</UL>
<P><STRONG><a name="[196]"></a>std::__rw_messages_base::_C_cat_open(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&, const std::locale&) const</STRONG> (Thumb, 114 bytes, Stack size 32 bytes, messages.o(i._ZNKSt18__rw_messages_base11_C_cat_openERKSsRKSt6locale))
<BR><BR>[Stack]<UL><LI>Max Depth = 308<LI>Call Chain = std::__rw_messages_base::_C_cat_open(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&, const std::locale&) const &rArr; __rw::__rw_locale_vector&lang;std::__rw_open_cat_data&rang;::resize(unsigned) &rArr; std::__rw_open_cat_data::__rw_open_cat_data() &rArr; std::locale::classic() &rArr; std::locale::locale(__rw::__rw_locale_imp*) &rArr; std::locale::_C_init() &rArr;  std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const char*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;catopen(const char*, int)
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;std::__rw_open_cat_data&rang;::resize(unsigned)
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_get_cats()
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::operator =(const std::locale&)
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_use_c_lib_locale::__rw_use_c_lib_locale(const char*, int)
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_use_c_lib_locale::~__rw_use_c_lib_locale()
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::messages&lang;char&rang;::do_open(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&, const std::locale&) const
</UL>

<P><STRONG><a name="[19a]"></a>std::__rw_messages_base::_C_get_locale(int) const</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, messages.o(i._ZNKSt18__rw_messages_base13_C_get_localeEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = std::__rw_messages_base::_C_get_locale(int) const &rArr; std::locale::classic() &rArr; std::locale::locale(__rw::__rw_locale_imp*) &rArr; std::locale::_C_init() &rArr;  std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const char*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_get_cats()
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::classic()
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::messages&lang;char&rang;::do_get(int, int, int, const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&) const
</UL>

<P><STRONG><a name="[19c]"></a>std::__rw_messages_base::_C_get_message(int, int, int) const</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, messages.o(i._ZNKSt18__rw_messages_base14_C_get_messageEiii))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = std::__rw_messages_base::_C_get_message(int, int, int) const &rArr; std::__rw_get_cats() &rArr; __aeabi_atexit &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;catgets(__rw::__rw_cat*, int, int, const char*)
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_get_cats()
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::messages&lang;char&rang;::do_get(int, int, int, const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&) const
</UL>

<P><STRONG><a name="[1a8]"></a>std::ctype&lang;char&rang;::is(std::ctype_base::mask, char) const</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, char.o(i._ZNKSt5ctypeIcE2isENSt10ctype_base4maskEc))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::_C_initfacet(const std::locale&)
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::ctype(const std::ctype_base::mask*, bool, unsigned)
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype_byname&lang;char&rang;::ctype_byname(const char*, unsigned)
</UL>

<P><STRONG><a name="[19d]"></a>std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const</STRONG> (Thumb, 252 bytes, Stack size 40 bytes, locale.o(i._ZNKSt6locale13_C_make_facetERKNS_2idEbiPFPN4__rw15__rw_facet_baseEiPKcjE))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw(int, ...)
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;__rw::__rw_facet_base*&rang;::resize(unsigned, __rw::__rw_facet_base*const &)
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::~locale()
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale(__rw::__rw_locale_imp*)
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_install_facet(__rw::__rw_facet_base*, const std::locale::id&) const
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::messages&lang;char&rang;::do_get(int, int, int, const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&) const
</UL>

<P><STRONG><a name="[1a0]"></a>std::locale::_C_install_facet(__rw::__rw_facet_base*, const std::locale::id&) const</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, locale.o(i._ZNKSt6locale16_C_install_facetEPN4__rw15__rw_facet_baseERKNS_2idE))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = std::locale::_C_install_facet(__rw::__rw_facet_base*, const std::locale::id&) const &rArr; __rw::__rw_locale_vector&lang;__rw::__rw_facet_base*&rang;::resize(unsigned, __rw::__rw_facet_base*const &) &rArr; operator new[] (unsigned) &rArr; operator new(unsigned) &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;__rw::__rw_facet_base*&rang;::resize(unsigned, __rw::__rw_facet_base*const &)
</UL>
<BR>[Called By]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const
</UL>

<P><STRONG><a name="[1a1]"></a>std::locale::name() const</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, locale.o(i._ZNKSt6locale4nameEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = std::locale::name() const &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const char*, const std::allocator&lang;char&rang;&) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_allocate(unsigned, unsigned, unsigned) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_getRep(unsigned, unsigned) &rArr;  __rw::__rw_throw(int, ...) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const char*, const std::allocator&lang;char&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::_C_initfacet(const std::locale&)
</UL>

<P><STRONG><a name="[1a2]"></a>std::char_traits&lang;char&rang;::copy(char*, const char*, unsigned)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, char.o(i._ZNSt11char_traitsIcE4copyEPcPKcj))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::char_traits&lang;char&rang;::copy(char*, const char*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;___aeabi_memcpy$base
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const char*, const std::allocator&lang;char&rang;&)
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned)
</UL>

<P><STRONG><a name="[1a4]"></a>std::ctype_byname&lang;char&rang;::_C_get_mask_table(const char*)</STRONG> (Thumb, 186 bytes, Stack size 24 bytes, char.o(i._ZNSt12ctype_bynameIcE17_C_get_mask_tableEPKc))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = std::ctype_byname&lang;char&rang;::_C_get_mask_table(const char*) &rArr; __rw::__rw_use_c_lib_locale::__rw_use_c_lib_locale(const char*, int) &rArr; operator new[] (unsigned) &rArr; operator new(unsigned) &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_use_c_lib_locale::__rw_use_c_lib_locale(const char*, int)
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_use_c_lib_locale::~__rw_use_c_lib_locale()
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype_byname&lang;char&rang;::ctype_byname(const char*, unsigned)
</UL>

<P><STRONG><a name="[1a6]"></a>std::ctype_byname&lang;char&rang;::ctype_byname(const char*, unsigned)</STRONG> (Thumb, 280 bytes, Stack size 32 bytes, char.o(i._ZNSt12ctype_bynameIcEC1EPKcj))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = std::ctype_byname&lang;char&rang;::ctype_byname(const char*, unsigned) &rArr; std::ctype_byname&lang;char&rang;::_C_get_mask_table(const char*) &rArr; __rw::__rw_use_c_lib_locale::__rw_use_c_lib_locale(const char*, int) &rArr; operator new[] (unsigned) &rArr; operator new(unsigned) &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_use_c_lib_locale::__rw_use_c_lib_locale(const char*, int)
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype_byname&lang;char&rang;::_C_get_mask_table(const char*)
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::is(std::ctype_base::mask, char) const
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_use_c_lib_locale::~__rw_use_c_lib_locale()
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::ctype(const std::ctype_base::mask*, bool, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_facet_maker&lang;std::ctype&lang;char&rang;&rang;::_C_maker_func(int, const char*, unsigned)
</UL>

<P><STRONG><a name="[207]"></a>std::ctype_byname&lang;char&rang;::ctype_byname__sub_object(const char*, unsigned)</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, char.o(i._ZNSt12ctype_bynameIcEC1EPKcj), UNUSED)

<P><STRONG><a name="[95]"></a>std::ctype_byname&lang;char&rang;::~ctype_byname__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, char.o(i._ZNSt12ctype_bynameIcED0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = std::ctype_byname&lang;char&rang;::~ctype_byname__deallocating() &rArr; std::ctype_byname&lang;char&rang;::~ctype_byname() &rArr; std::ctype&lang;char&rang;::~ctype() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype_byname&lang;char&rang;::~ctype_byname()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> char.o(.constdata__ZTVSt12ctype_bynameIcE)
</UL>
<P><STRONG><a name="[94]"></a>std::ctype_byname&lang;char&rang;::~ctype_byname()</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, char.o(i._ZNSt12ctype_bynameIcED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = std::ctype_byname&lang;char&rang;::~ctype_byname() &rArr; std::ctype&lang;char&rang;::~ctype() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::~ctype()
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype_byname&lang;char&rang;::~ctype_byname__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> char.o(.constdata__ZTVSt12ctype_bynameIcE)
</UL>
<P><STRONG><a name="[208]"></a>std::ctype_byname&lang;char&rang;::~ctype_byname__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, char.o(i._ZNSt12ctype_bynameIcED1Ev), UNUSED)

<P><STRONG><a name="[17d]"></a>std::__rw_exception::_C_vformat(int, std::__va_list)</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, rwstdexcept.o(i._ZNSt14__rw_exception10_C_vformatEiSt9__va_list))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list)
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, const char*, std::__va_list)
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw(int, ...)
</UL>

<P><STRONG><a name="[17c]"></a>std::__rw_exception::__rw_exception()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, rwstdexcept.o(i._ZNSt14__rw_exceptionC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::__rw_exception::__rw_exception()
</UL>
<BR>[Calls]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::exception::exception()
</UL>
<BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw(int, ...)
</UL>

<P><STRONG><a name="[209]"></a>std::__rw_exception::__rw_exception__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwstdexcept.o(i._ZNSt14__rw_exceptionC1Ev), UNUSED)

<P><STRONG><a name="[97]"></a>std::__rw_exception::~__rw_exception()</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, rwstdexcept.o(i._ZNSt14__rw_exceptionD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = std::__rw_exception::~__rw_exception() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwstdexcept.o(.constdata__ZTVSt14__rw_exception)
</UL>
<P><STRONG><a name="[20a]"></a>std::__rw_exception::~__rw_exception__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwstdexcept.o(i._ZNSt14__rw_exceptionD1Ev), UNUSED)

<P><STRONG><a name="[1ab]"></a>std::__rw_messages_base::~__rw_messages_base()</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, rwstdexcept.o(i._ZNSt18__rw_messages_baseD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = std::__rw_messages_base::~__rw_messages_base() &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string() &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_unlink() &rArr; __rw::__rw_deallocate(void*, unsigned, int) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string()
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::messages&lang;char&rang;::~messages()
</UL>

<P><STRONG><a name="[20b]"></a>std::__rw_messages_base::~__rw_messages_base__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwstdexcept.o(i._ZNSt18__rw_messages_baseD1Ev), UNUSED)

<P><STRONG><a name="[90]"></a>std::__rw_open_cat_data::__rw_open_cat_data()</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, messages.o(i._ZNSt18__rw_open_cat_dataC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = std::__rw_open_cat_data::__rw_open_cat_data() &rArr; std::locale::classic() &rArr; std::locale::locale(__rw::__rw_locale_imp*) &rArr; std::locale::_C_init() &rArr;  std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const char*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale(const std::locale&)
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::classic()
</UL>
<BR>[Called By]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;std::__rw_open_cat_data&rang;::resize(unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> messages.o(t._ZN4__rw18__rw_locale_vectorISt18__rw_open_cat_dataE6resizeEj)
</UL>
<P><STRONG><a name="[20c]"></a>std::__rw_open_cat_data::__rw_open_cat_data__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, messages.o(i._ZNSt18__rw_open_cat_dataC1Ev), UNUSED)

<P><STRONG><a name="[8f]"></a>std::__rw_open_cat_data::~__rw_open_cat_data()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, messages.o(i._ZNSt18__rw_open_cat_dataD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = std::__rw_open_cat_data::~__rw_open_cat_data() &rArr; std::locale::~locale() &rArr; __rw::__rw_locale_imp::~__rw_locale_imp() &rArr; __rw::__rw_locale_vector&lang;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&rang;::~__rw_locale_vector() &rArr; __aeabi_vec_delete &rArr; __aeabi_vec_dtor_cookie &rArr; __aeabi_vec_dtor
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::~locale()
</UL>
<BR>[Called By]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;std::__rw_open_cat_data&rang;::resize(unsigned)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> messages.o(t._ZN4__rw18__rw_locale_vectorISt18__rw_open_cat_dataE6resizeEj)
<LI> messages.o(t._ZN4__rw18__rw_locale_vectorISt18__rw_open_cat_dataED1Ev)
</UL>
<P><STRONG><a name="[20d]"></a>std::__rw_open_cat_data::~__rw_open_cat_data__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, messages.o(i._ZNSt18__rw_open_cat_dataD1Ev), UNUSED)

<P><STRONG><a name="[1ad]"></a>std::__rw_open_cat_data::operator =(const std::__rw_open_cat_data&)</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, messages.o(i._ZNSt18__rw_open_cat_dataaSERKS_))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = std::__rw_open_cat_data::operator =(const std::__rw_open_cat_data&) &rArr; std::locale::operator =(const std::locale&) &rArr; __rw::__rw_locale_imp::~__rw_locale_imp() &rArr; __rw::__rw_locale_vector&lang;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&rang;::~__rw_locale_vector() &rArr; __aeabi_vec_delete &rArr; __aeabi_vec_dtor_cookie &rArr; __aeabi_vec_dtor
</UL>
<BR>[Calls]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::operator =(const std::locale&)
</UL>
<BR>[Called By]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;std::__rw_open_cat_data&rang;::resize(unsigned)
</UL>

<P><STRONG><a name="[96]"></a>std::ctype&lang;char&rang;::_C_initfacet(const std::locale&)</STRONG> (Thumb, 250 bytes, Stack size 40 bytes, char.o(i._ZNSt5ctypeIcE12_C_initfacetERKSt6locale))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = std::ctype&lang;char&rang;::_C_initfacet(const std::locale&) &rArr; std::locale::name() const &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const char*, const std::allocator&lang;char&rang;&) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_allocate(unsigned, unsigned, unsigned) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_getRep(unsigned, unsigned) &rArr;  __rw::__rw_throw(int, ...) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::name() const
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_use_c_lib_locale::__rw_use_c_lib_locale(const char*, int)
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string()
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::is(std::ctype_base::mask, char) const
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_use_c_lib_locale::~__rw_use_c_lib_locale()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> char.o(.constdata__ZTVSt5ctypeIcE)
<LI> char.o(.constdata__ZTVSt12ctype_bynameIcE)
</UL>
<P><STRONG><a name="[1a7]"></a>std::ctype&lang;char&rang;::ctype(const std::ctype_base::mask*, bool, unsigned)</STRONG> (Thumb, 270 bytes, Stack size 24 bytes, char.o(i._ZNSt5ctypeIcEC1EPKNSt10ctype_base4maskEbj))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = std::ctype&lang;char&rang;::ctype(const std::ctype_base::mask*, bool, unsigned) &rArr; operator new[] (unsigned) &rArr; operator new(unsigned) &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::is(std::ctype_base::mask, char) const
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype_byname&lang;char&rang;::ctype_byname(const char*, unsigned)
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_facet_maker&lang;std::ctype&lang;char&rang;&rang;::_C_maker_func(int, const char*, unsigned)
</UL>

<P><STRONG><a name="[20e]"></a>std::ctype&lang;char&rang;::ctype__sub_object(const std::ctype_base::mask*, bool, unsigned)</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, char.o(i._ZNSt5ctypeIcEC1EPKNSt10ctype_base4maskEbj), UNUSED)

<P><STRONG><a name="[9a]"></a>std::ctype&lang;char&rang;::~ctype__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, char.o(i._ZNSt5ctypeIcED0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = std::ctype&lang;char&rang;::~ctype__deallocating() &rArr; std::ctype&lang;char&rang;::~ctype() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::~ctype()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> char.o(.constdata__ZTVSt5ctypeIcE)
</UL>
<P><STRONG><a name="[99]"></a>std::ctype&lang;char&rang;::~ctype()</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, char.o(i._ZNSt5ctypeIcED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = std::ctype&lang;char&rang;::~ctype() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::~ctype__deallocating()
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype_byname&lang;char&rang;::~ctype_byname()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> char.o(.constdata__ZTVSt5ctypeIcE)
</UL>
<P><STRONG><a name="[20f]"></a>std::ctype&lang;char&rang;::~ctype__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, char.o(i._ZNSt5ctypeIcED1Ev), UNUSED)

<P><STRONG><a name="[92]"></a>std::locale::facet::~facet__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, rwstdexcept.o(i._ZNSt6locale5facetD0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = std::locale::facet::~facet__deallocating() &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwstdexcept.o(.constdata__ZTVNSt6locale5facetE)
</UL>
<P><STRONG><a name="[1ae]"></a>std::locale::_C_init()</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, locale.o(i._ZNSt6locale7_C_initEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 212 + In Cycle
<LI>Call Chain = std::locale::_C_init() &rArr;  std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const char*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const char*)
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::~__rw_locale_imp()
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale(__rw::__rw_locale_imp*)
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::classic()
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale()
</UL>

<P><STRONG><a name="[19b]"></a>std::locale::classic()</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, locale.o(i._ZNSt6locale7classicEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = std::locale::classic() &rArr; std::locale::locale(__rw::__rw_locale_imp*) &rArr; std::locale::_C_init() &rArr;  std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const char*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale(__rw::__rw_locale_imp*)
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_init()
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_open_cat_data::__rw_open_cat_data()
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_messages_base::_C_get_locale(int) const
</UL>

<P><STRONG><a name="[19f]"></a>std::locale::locale(__rw::__rw_locale_imp*)</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, locale.o(i._ZNSt6localeC1EPN4__rw15__rw_locale_impE))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = std::locale::locale(__rw::__rw_locale_imp*) &rArr; std::locale::_C_init() &rArr;  std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const char*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_init()
</UL>
<BR>[Called By]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::classic()
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const
</UL>

<P><STRONG><a name="[210]"></a>std::locale::locale__sub_object(__rw::__rw_locale_imp*)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, locale.o(i._ZNSt6localeC1EPN4__rw15__rw_locale_impE), UNUSED)

<P><STRONG><a name="[1ac]"></a>std::locale::locale(const std::locale&)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, messages.o(i._ZNSt6localeC1ERKS_))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_open_cat_data::__rw_open_cat_data()
</UL>

<P><STRONG><a name="[211]"></a>std::locale::locale__sub_object(const std::locale&)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, messages.o(i._ZNSt6localeC1ERKS_), UNUSED)

<P><STRONG><a name="[17a]"></a>std::locale::locale()</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, rwstdexcept.o(i._ZNSt6localeC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = std::locale::locale() &rArr; std::locale::_C_init() &rArr;  std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const char*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_init()
</UL>
<BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list)
</UL>

<P><STRONG><a name="[212]"></a>std::locale::locale__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, rwstdexcept.o(i._ZNSt6localeC1Ev), UNUSED)

<P><STRONG><a name="[87]"></a>std::locale::~locale()</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, locale.o(i._ZNSt6localeD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = std::locale::~locale() &rArr; __rw::__rw_locale_imp::~__rw_locale_imp() &rArr; __rw::__rw_locale_vector&lang;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&rang;::~__rw_locale_vector() &rArr; __aeabi_vec_delete &rArr; __aeabi_vec_dtor_cookie &rArr; __aeabi_vec_dtor
</UL>
<BR>[Calls]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::~__rw_locale_imp()
</UL>
<BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list)
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_open_cat_data::~__rw_open_cat_data()
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> locale.o(i._ZNSt6locale7classicEv)
</UL>
<P><STRONG><a name="[213]"></a>std::locale::~locale__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, locale.o(i._ZNSt6localeD1Ev), UNUSED)

<P><STRONG><a name="[199]"></a>std::locale::operator =(const std::locale&)</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, locale.o(i._ZNSt6localeaSERKS_))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = std::locale::operator =(const std::locale&) &rArr; __rw::__rw_locale_imp::~__rw_locale_imp() &rArr; __rw::__rw_locale_vector&lang;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&rang;::~__rw_locale_vector() &rArr; __aeabi_vec_delete &rArr; __aeabi_vec_dtor_cookie &rArr; __aeabi_vec_dtor
</UL>
<BR>[Calls]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::~__rw_locale_imp()
</UL>
<BR>[Called By]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_open_cat_data::operator =(const std::__rw_open_cat_data&)
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_messages_base::_C_cat_open(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&, const std::locale&) const
</UL>

<P><STRONG><a name="[9c]"></a>std::messages&lang;char&rang;::~messages__deallocating()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, rwstdexcept.o(i._ZNSt8messagesIcED0Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = std::messages&lang;char&rang;::~messages__deallocating() &rArr; std::messages&lang;char&rang;::~messages() &rArr; std::__rw_messages_base::~__rw_messages_base() &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string() &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_unlink() &rArr; __rw::__rw_deallocate(void*, unsigned, int) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::messages&lang;char&rang;::~messages()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwstdexcept.o(.constdata__ZTVSt8messagesIcE)
</UL>
<P><STRONG><a name="[9b]"></a>std::messages&lang;char&rang;::~messages()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, rwstdexcept.o(i._ZNSt8messagesIcED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = std::messages&lang;char&rang;::~messages() &rArr; std::__rw_messages_base::~__rw_messages_base() &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string() &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_unlink() &rArr; __rw::__rw_deallocate(void*, unsigned, int) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_messages_base::~__rw_messages_base()
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::messages&lang;char&rang;::~messages__deallocating()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwstdexcept.o(.constdata__ZTVSt8messagesIcE)
</UL>
<P><STRONG><a name="[214]"></a>std::messages&lang;char&rang;::~messages__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwstdexcept.o(i._ZNSt8messagesIcED1Ev), UNUSED)

<P><STRONG><a name="[1aa]"></a>std::exception::exception()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, exception_ctor.o(i._ZNSt9exceptionC1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::__rw_exception()
</UL>

<P><STRONG><a name="[215]"></a>std::exception::exception__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, exception_ctor.o(i._ZNSt9exceptionC1Ev), UNUSED)

<P><STRONG><a name="[197]"></a>std::__rw_get_cats()</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, messages.o(i._ZSt13__rw_get_catsv))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = std::__rw_get_cats() &rArr; __aeabi_atexit &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_messages_base::_C_get_message(int, int, int) const
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_messages_base::_C_get_locale(int) const
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_messages_base::_C_cat_open(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&, const std::locale&) const
</UL>

<P><STRONG><a name="[8c]"></a>operator delete[] (void*)</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, array_del.o(i._ZdaPv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = operator delete[] (void*) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::~Matrix()
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::DeleteArray(Matrix::CreatedArreyType)
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, const char*, std::__va_list)
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;__rw::__rw_cat*&rang;::~__rw_locale_vector()
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_delete
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception_noex(int, char*)
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;__rw::__rw_facet_base*&rang;::~__rw_locale_vector()
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;__rw::__rw_facet_base*&rang;::resize(unsigned, __rw::__rw_facet_base*const &)
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::~__rw_locale_imp()
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::~ctype()
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_use_c_lib_locale::~__rw_use_c_lib_locale()
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::~__rw_exception()
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::_C_vformat(int, std::__va_list)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cxa_vec_new.o(i.__cxa_vec_new)
</UL>
<P><STRONG><a name="[148]"></a>operator delete (void*)</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, delete.o(i._ZdlPv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_deallocate(void*, unsigned, int)
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;catopen(const char*, int)
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::operator =(const std::locale&)
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::~locale()
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::~ctype__deallocating()
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype_byname&lang;char&rang;::~ctype_byname__deallocating()
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_init()
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::messages&lang;char&rang;::~messages__deallocating()
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::facet::~facet__deallocating()
</UL>

<P><STRONG><a name="[174]"></a>operator new[] (unsigned)</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, array_new.o(i._Znaj))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = operator new[] (unsigned) &rArr; operator new(unsigned) &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::CreatArray(unsigned, unsigned)
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::CreatMatrixFrame(void*, unsigned, unsigned)
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::CreatMatrixFrame(Matrix::CreatedArreyType)
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, const char*, std::__va_list)
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___10_rwcats_cpp_64e8068e
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;__rw::__rw_facet_base*&rang;::resize(unsigned, __rw::__rw_facet_base*const &)
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned)
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_use_c_lib_locale::__rw_use_c_lib_locale(const char*, int)
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype_byname&lang;char&rang;::_C_get_mask_table(const char*)
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::ctype(const std::ctype_base::mask*, bool, unsigned)
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::_C_vformat(int, std::__va_list)
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_array_new_general
</UL>

<P><STRONG><a name="[147]"></a>operator new(unsigned)</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, new.o(i._Znwj))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = operator new(unsigned) &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_new_handler_addr
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_allocate(unsigned, int)
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;catopen(const char*, int)
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_init()
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_facet_maker&lang;std::ctype&lang;char&rang;&rang;::_C_maker_func(int, const char*, unsigned)
</UL>

<P><STRONG><a name="[1b3]"></a>__0fprintf</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, printfa.o(i.__0fprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[216]"></a>__1fprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0fprintf), UNUSED)

<P><STRONG><a name="[217]"></a>__2fprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0fprintf), UNUSED)

<P><STRONG><a name="[218]"></a>__c89fprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0fprintf), UNUSED)

<P><STRONG><a name="[18b]"></a>fprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0fprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = fprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw_exception_noex(int, char*)
</UL>

<P><STRONG><a name="[1b5]"></a>__0vsnprintf</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, printfa.o(i.__0vsnprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[219]"></a>__1vsnprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsnprintf), UNUSED)

<P><STRONG><a name="[21a]"></a>__2vsnprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsnprintf), UNUSED)

<P><STRONG><a name="[21b]"></a>__c89vsnprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsnprintf), UNUSED)

<P><STRONG><a name="[175]"></a>vsnprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsnprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = vsnprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, const char*, std::__va_list)
</UL>

<P><STRONG><a name="[1b6]"></a>__ARM_array_new_general</STRONG> (Thumb, 146 bytes, Stack size 56 bytes, array_new_general.o(i.__ARM_array_new_general))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = __ARM_array_new_general &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_rethrow
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::terminate()
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_vec_cleanup
</UL>
<BR>[Called By]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_vec_new
</UL>

<P><STRONG><a name="[1be]"></a>__ARM_fpclassify</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, fpclassify.o(i.__ARM_fpclassify))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_fpclassify
</UL>
<BR>[Called By]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>

<P><STRONG><a name="[1b0]"></a>__aeabi_atexit</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, aeabi_atexit.o(i.__aeabi_atexit))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = __aeabi_atexit &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ddtor_pointer_addr
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___5_Map_c_1c83cf28
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___10_rwcats_cpp_64e8068e
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_get_cats()
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::classic()
</UL>

<P><STRONG><a name="[bb]"></a>__aeabi_vec_dtor_cookie</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, aeabi_vec_dtor_cookie.o(i.__aeabi_vec_dtor_cookie))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __aeabi_vec_dtor_cookie &rArr; __aeabi_vec_dtor
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_dtor
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_delete
</UL>

<P><STRONG><a name="[183]"></a>__aeabi_vec_new_cookie</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, aeabi_vec_new_cookie.o(i.__aeabi_vec_new_cookie))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = __aeabi_vec_new_cookie &rArr; __cxa_vec_new &rArr; __ARM_array_new_general &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_vec_new
</UL>
<BR>[Called By]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_vector&lang;std::__rw_open_cat_data&rang;::resize(unsigned)
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned)
</UL>

<P><STRONG><a name="[1bc]"></a>__cxa_finalize</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, cxa_finalize.o(i.__cxa_finalize), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ddtor_pointer_addr
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>

<P><STRONG><a name="[1af]"></a>__cxa_guard_acquire</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, cxa_guard_acquire.o(i.__cxa_guard_acquire))
<BR><BR>[Called By]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_get_cats()
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::classic()
</UL>

<P><STRONG><a name="[1bb]"></a>__cxa_vec_new</STRONG> (Thumb, 18 bytes, Stack size 32 bytes, cxa_vec_new.o(i.__cxa_vec_new))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = __cxa_vec_new &rArr; __ARM_array_new_general &rArr; std::terminate() &rArr; __cxa_get_globals &rArr; __ARM_exceptions_buffer_init &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_array_new_general
</UL>
<BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_new_cookie
</UL>

<P><STRONG><a name="[10f]"></a>__hardfp_atan</STRONG> (Thumb, 622 bytes, Stack size 48 bytes, atan.o(i.__hardfp_atan))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = __hardfp_atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fabs
</UL>
<BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to Motion_Ctrl_c]::distanceCal(double, double, double, double, double*, double*)
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MixSpeed(double, double, double, MoveInLine, Coordinate, int*, double*)
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatMoveLine(MoveInLine*, double, double, Coordinate*)
</UL>

<P><STRONG><a name="[14a]"></a>__hardfp_cos</STRONG> (Thumb, 180 bytes, Stack size 32 bytes, cos.o(i.__hardfp_cos))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = __hardfp_cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to Map_c]::SetOrigin()
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to Map_c]::GetOriginalCoordinate(motion_status, Coordinate&)
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MixSpeed(double, double, double, MoveInLine, Coordinate, int*, double*)
</UL>

<P><STRONG><a name="[12e]"></a>__hardfp_fabs</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, fabs.o(i.__hardfp_fabs))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __hardfp_fabs
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to Map_c]::GetOriginalCoordinate(motion_status, Coordinate&)
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDistanceToLine(Point, Line)
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MixSpeed(double, double, double, MoveInLine, Coordinate, int*, double*)
</UL>

<P><STRONG><a name="[14c]"></a>__hardfp_fmod</STRONG> (Thumb, 254 bytes, Stack size 48 bytes, fmod.o(i.__hardfp_fmod))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = __hardfp_fmod &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drem
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MixSpeed(double, double, double, MoveInLine, Coordinate, int*, double*)
</UL>

<P><STRONG><a name="[14b]"></a>__hardfp_sin</STRONG> (Thumb, 180 bytes, Stack size 32 bytes, sin.o(i.__hardfp_sin))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to Map_c]::SetOrigin()
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to Map_c]::GetOriginalCoordinate(motion_status, Coordinate&)
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MixSpeed(double, double, double, MoveInLine, Coordinate, int*, double*)
</UL>

<P><STRONG><a name="[f5]"></a>__hardfp_sqrt</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, sqrt.o(i.__hardfp_sqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __hardfp_sqrt &rArr; _dsqrt &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateLine(Point, double, bool)
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to Motion_Ctrl_c]::distanceCal(double, double, double, double, double*, double*)
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MixSpeed(double, double, double, MoveInLine, Coordinate, int*, double*)
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to Vol_curve_c]::Trapezoid_Loop(unsigned, unsigned, unsigned, const double*, unsigned, unsigned, unsigned)
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to Vol_curve_c]::Distance_curve(double, double, unsigned, Vol_CurveType*)
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to Vol_curve_c]::Triangle_Loop(unsigned, unsigned, unsigned, const double*, unsigned, unsigned, unsigned)
</UL>

<P><STRONG><a name="[141]"></a>__hardfp_sqrtf</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, sqrtf.o(i.__hardfp_sqrtf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __hardfp_sqrtf
</UL>
<BR>[Calls]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T_cal()
</UL>

<P><STRONG><a name="[1c4]"></a>__ieee754_rem_pio2</STRONG> (Thumb, 938 bytes, Stack size 120 bytes, rred.o(i.__ieee754_rem_pio2))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fabs
</UL>
<BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
</UL>

<P><STRONG><a name="[1c6]"></a>__kernel_cos</STRONG> (Thumb, 322 bytes, Stack size 64 bytes, cos_i.o(i.__kernel_cos))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = __kernel_cos &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
</UL>
<BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
</UL>

<P><STRONG><a name="[1c1]"></a>__kernel_poly</STRONG> (Thumb, 248 bytes, Stack size 24 bytes, poly.o(i.__kernel_poly))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>

<P><STRONG><a name="[1c5]"></a>__kernel_sin</STRONG> (Thumb, 280 bytes, Stack size 72 bytes, sin_i.o(i.__kernel_sin))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = __kernel_sin &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
</UL>
<BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
</UL>

<P><STRONG><a name="[1bd]"></a>__mathlib_dbl_infnan</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_infnan))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = __mathlib_dbl_infnan &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>

<P><STRONG><a name="[1c3]"></a>__mathlib_dbl_invalid</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_invalid))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __mathlib_dbl_invalid &rArr; __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fmod
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
</UL>

<P><STRONG><a name="[1bf]"></a>__mathlib_dbl_underflow</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_underflow))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = __mathlib_dbl_underflow &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>

<P><STRONG><a name="[21c]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[21d]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[21e]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[1c2]"></a>__set_errno</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, errno.o(i.__set_errno))
<BR><BR>[Called By]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrtf
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fmod
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
</UL>

<P><STRONG><a name="[ce]"></a>_is_digit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, scanf_fp.o(i._is_digit), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
</UL>

<P><STRONG><a name="[1c0]"></a>fabs</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, fabs.o(i.fabs))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = fabs
</UL>
<BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>

<P><STRONG><a name="[8a]"></a>fputc</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, fputc.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fputc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0fprintf)
</UL>
<P><STRONG><a name="[1b1]"></a>free</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, malloc.o(i.free))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = free
</UL>
<BR>[Called By]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_finalize
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete (void*)
</UL>

<P><STRONG><a name="[7b]"></a>main</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 784<LI>Call Chain = main &rArr; baseInit() &rArr; USART_Config() &rArr; [local to USART_c]::Map_Config() &rArr; MapParamsInit() &rArr; Matrix::getE(unsigned) &rArr; Matrix::Matrix(const Matrix&) &rArr; Matrix::CreatMatrixFrame(void*, unsigned, unsigned) &rArr; Matrix::CreatArray(unsigned, unsigned) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const char*) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;baseInit()
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GoToSpecialPoints(MovePointsType*, MovePointsMarkType*, MovePointsMarkType)
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpinDeviceCtrl(SpinPositionType)
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PromptToneScan()
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CarryOutAction(SpecialActions&, unsigned char&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[c3]"></a>malloc</STRONG> (Thumb, 92 bytes, Stack size 20 bytes, malloc.o(i.malloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_exceptions_buffer_init
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_get_globals
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>

<P><STRONG><a name="[1d3]"></a>__rw::__string_ref&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_inc_ref()</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, matrix.o(t._ZN4__rw12__string_refIcSt11char_traitsIcESaIcEE10_C_inc_refEv))
<BR><BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)
</UL>

<P><STRONG><a name="[91]"></a>__rw::__rw_facet_maker&lang;std::ctype&lang;char&rang;&rang;::_C_maker_func(int, const char*, unsigned)</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, rwstdexcept.o(t._ZN4__rw16__rw_facet_makerISt5ctypeIcEE13_C_maker_funcEiPKcj))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = __rw::__rw_facet_maker&lang;std::ctype&lang;char&rang;&rang;::_C_maker_func(int, const char*, unsigned) &rArr; std::ctype_byname&lang;char&rang;::ctype_byname(const char*, unsigned) &rArr; std::ctype_byname&lang;char&rang;::_C_get_mask_table(const char*) &rArr; __rw::__rw_use_c_lib_locale::__rw_use_c_lib_locale(const char*, int) &rArr; operator new[] (unsigned) &rArr; operator new(unsigned) &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new(unsigned)
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::ctype(const std::ctype_base::mask*, bool, unsigned)
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype_byname&lang;char&rang;::ctype_byname(const char*, unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwstdexcept.o(t._ZNKSt8messagesIcE6do_getEiiiRKSs)
</UL>
<P><STRONG><a name="[19e]"></a>__rw::__rw_locale_vector&lang;__rw::__rw_facet_base*&rang;::resize(unsigned, __rw::__rw_facet_base*const &)</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, locale.o(t._ZN4__rw18__rw_locale_vectorIPNS_15__rw_facet_baseEE6resizeEjRKS2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = __rw::__rw_locale_vector&lang;__rw::__rw_facet_base*&rang;::resize(unsigned, __rw::__rw_facet_base*const &) &rArr; operator new[] (unsigned) &rArr; operator new(unsigned) &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_install_facet(__rw::__rw_facet_base*, const std::locale::id&) const
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const
</UL>

<P><STRONG><a name="[186]"></a>__rw::__rw_locale_vector&lang;__rw::__rw_facet_base*&rang;::~__rw_locale_vector()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, locale.o(t._ZN4__rw18__rw_locale_vectorIPNS_15__rw_facet_baseEED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __rw::__rw_locale_vector&lang;__rw::__rw_facet_base*&rang;::~__rw_locale_vector() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::~__rw_locale_imp()
</UL>

<P><STRONG><a name="[21f]"></a>__rw::__rw_locale_vector&lang;__rw::__rw_facet_base*&rang;::~__rw_locale_vector__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, locale.o(t._ZN4__rw18__rw_locale_vectorIPNS_15__rw_facet_baseEED1Ev), UNUSED)

<P><STRONG><a name="[8d]"></a>__rw::__rw_locale_vector&lang;__rw::__rw_cat*&rang;::~__rw_locale_vector()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, rwcats.o(t._ZN4__rw18__rw_locale_vectorIPNS_8__rw_catEED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __rw::__rw_locale_vector&lang;__rw::__rw_cat*&rang;::~__rw_locale_vector() &rArr; operator delete[] (void*) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwcats.o(i.__sti___10_rwcats_cpp_64e8068e)
</UL>
<P><STRONG><a name="[220]"></a>__rw::__rw_locale_vector&lang;__rw::__rw_cat*&rang;::~__rw_locale_vector__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rwcats.o(t._ZN4__rw18__rw_locale_vectorIPNS_8__rw_catEED1Ev), UNUSED)

<P><STRONG><a name="[187]"></a>__rw::__rw_locale_vector&lang;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&rang;::~__rw_locale_vector()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, locale.o(t._ZN4__rw18__rw_locale_vectorISsED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __rw::__rw_locale_vector&lang;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&rang;::~__rw_locale_vector() &rArr; __aeabi_vec_delete &rArr; __aeabi_vec_dtor_cookie &rArr; __aeabi_vec_dtor
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_delete
</UL>
<BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::~__rw_locale_imp()
</UL>

<P><STRONG><a name="[221]"></a>__rw::__rw_locale_vector&lang;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&rang;::~__rw_locale_vector__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, locale.o(t._ZN4__rw18__rw_locale_vectorISsED1Ev), UNUSED)

<P><STRONG><a name="[198]"></a>__rw::__rw_locale_vector&lang;std::__rw_open_cat_data&rang;::resize(unsigned)</STRONG> (Thumb, 122 bytes, Stack size 40 bytes, messages.o(t._ZN4__rw18__rw_locale_vectorISt18__rw_open_cat_dataE6resizeEj))
<BR><BR>[Stack]<UL><LI>Max Depth = 276<LI>Call Chain = __rw::__rw_locale_vector&lang;std::__rw_open_cat_data&rang;::resize(unsigned) &rArr; std::__rw_open_cat_data::__rw_open_cat_data() &rArr; std::locale::classic() &rArr; std::locale::locale(__rw::__rw_locale_imp*) &rArr; std::locale::_C_init() &rArr;  std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const char*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_new_cookie
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_delete
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_open_cat_data::operator =(const std::__rw_open_cat_data&)
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_open_cat_data::~__rw_open_cat_data()
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_open_cat_data::__rw_open_cat_data()
</UL>
<BR>[Called By]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_messages_base::_C_cat_open(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&, const std::locale&) const
</UL>

<P><STRONG><a name="[88]"></a>__rw::__rw_locale_vector&lang;std::__rw_open_cat_data&rang;::~__rw_locale_vector()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, messages.o(t._ZN4__rw18__rw_locale_vectorISt18__rw_open_cat_dataED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __rw::__rw_locale_vector&lang;std::__rw_open_cat_data&rang;::~__rw_locale_vector() &rArr; __aeabi_vec_delete &rArr; __aeabi_vec_dtor_cookie &rArr; __aeabi_vec_dtor
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_delete
</UL>
<BR>[Address Reference Count : 1]<UL><LI> messages.o(i._ZSt13__rw_get_catsv)
</UL>
<P><STRONG><a name="[222]"></a>__rw::__rw_locale_vector&lang;std::__rw_open_cat_data&rang;::~__rw_locale_vector__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, messages.o(t._ZN4__rw18__rw_locale_vectorISt18__rw_open_cat_dataED1Ev), UNUSED)

<P><STRONG><a name="[9e]"></a>std::messages&lang;char&rang;::do_get(int, int, int, const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&) const</STRONG> (Thumb, 136 bytes, Stack size 40 bytes, rwstdexcept.o(t._ZNKSt8messagesIcE6do_getEiiiRKSs))
<BR><BR>[Stack]<UL><LI>Max Depth = 512<LI>Call Chain = std::messages&lang;char&rang;::do_get(int, int, int, const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&) const &rArr; std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const char*, const std::allocator&lang;char&rang;&)
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string()
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_make_facet(const std::locale::id&, bool, int, __rw::__rw_facet_base*(*)(int, const char*, unsigned)) const
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_messages_base::_C_get_message(int, int, int) const
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_messages_base::_C_get_locale(int) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwstdexcept.o(.constdata__ZTVSt8messagesIcE)
</UL>
<P><STRONG><a name="[9d]"></a>std::messages&lang;char&rang;::do_open(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&, const std::locale&) const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, rwstdexcept.o(t._ZNKSt8messagesIcE7do_openERKSsRKSt6locale))
<BR><BR>[Stack]<UL><LI>Max Depth = 308<LI>Call Chain = std::messages&lang;char&rang;::do_open(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&, const std::locale&) const &rArr; std::__rw_messages_base::_C_cat_open(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&, const std::locale&) const &rArr; __rw::__rw_locale_vector&lang;std::__rw_open_cat_data&rang;::resize(unsigned) &rArr; std::__rw_open_cat_data::__rw_open_cat_data() &rArr; std::locale::classic() &rArr; std::locale::locale(__rw::__rw_locale_imp*) &rArr; std::locale::_C_init() &rArr;  std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const char*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_messages_base::_C_cat_open(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&, const std::locale&) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwstdexcept.o(.constdata__ZTVSt8messagesIcE)
</UL>
<P><STRONG><a name="[1cc]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_allocate(unsigned, unsigned, unsigned)</STRONG> (Thumb, 50 bytes, Stack size 40 bytes, locale.o(t._ZNSs11_C_allocateEjjj))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_allocate(unsigned, unsigned, unsigned) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_getRep(unsigned, unsigned) &rArr;  __rw::__rw_throw(int, ...) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;const T1& std::max&lang;unsigned&rang;(const T1&, const T1&)
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_getRep(unsigned, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const char*, const std::allocator&lang;char&rang;&)
</UL>

<P><STRONG><a name="[1cf]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned)</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, locale.o(t._ZNSs7replaceEjjPKcj))
<BR><BR>[Stack]<UL><LI>Max Depth = 504<LI>Call Chain = std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const char*)
</UL>

<P><STRONG><a name="[1d0]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned)</STRONG> (Thumb, 352 bytes, Stack size 48 bytes, char.o(t._ZNSs7replaceEjjPKcjjj))
<BR><BR>[Stack]<UL><LI>Max Depth = 480<LI>Call Chain = std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw(int, ...)
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;const T1& std::max&lang;unsigned&rang;(const T1&, const T1&)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_unlink()
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_getRep(unsigned, unsigned)
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::char_traits&lang;char&rang;::copy(char*, const char*, unsigned)
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;___aeabi_memmove$base
</UL>
<BR>[Called By]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned)
</UL>

<P><STRONG><a name="[1ce]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_getRep(unsigned, unsigned)</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, char.o(t._ZNSs9_C_getRepEjj))
<BR><BR>[Stack]<UL><LI>Max Depth = 68 + In Cycle
<LI>Call Chain = std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_getRep(unsigned, unsigned) &rArr;  __rw::__rw_throw(int, ...) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_allocate(unsigned, int)
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_throw(int, ...)
</UL>
<BR>[Called By]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_allocate(unsigned, unsigned, unsigned)
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned)
</UL>

<P><STRONG><a name="[1d1]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_unlink()</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, char.o(t._ZNSs9_C_unlinkEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_unlink() &rArr; __rw::__rw_deallocate(void*, unsigned, int) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_deallocate(void*, unsigned, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const char*)
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string()
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned)
</UL>

<P><STRONG><a name="[178]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const char*, const std::allocator&lang;char&rang;&)</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, locale.o(t._ZNSsC1EPKcRKSaIcE))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const char*, const std::allocator&lang;char&rang;&) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_allocate(unsigned, unsigned, unsigned) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_getRep(unsigned, unsigned) &rArr;  __rw::__rw_throw(int, ...) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_allocate(unsigned, unsigned, unsigned)
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::char_traits&lang;char&rang;::copy(char*, const char*, unsigned)
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list)
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::name() const
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::messages&lang;char&rang;::do_get(int, int, int, const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&) const
</UL>

<P><STRONG><a name="[223]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string__sub_object(const char*, const std::allocator&lang;char&rang;&)</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, locale.o(t._ZNSsC1EPKcRKSaIcE), UNUSED)

<P><STRONG><a name="[d3]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const std::allocator&lang;char&rang;&)</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, locale.o(t._ZNSsC1ERKSaIcE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const std::allocator&lang;char&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::Matrix()
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::Matrix(const Matrix&)
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::CreatedArreyType::CreatedArreyType()
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned)
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;&lang;Func5&rang;
</UL>

<P><STRONG><a name="[224]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string__sub_object(const std::allocator&lang;char&rang;&)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, locale.o(t._ZNSsC1ERKSaIcE), UNUSED)

<P><STRONG><a name="[179]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, char.o(t._ZNSsC1ERKSs))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_getRep(unsigned, unsigned) &rArr;  __rw::__rw_throw(int, ...) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__string_ref&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_inc_ref()
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_getRep(unsigned, unsigned)
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::char_traits&lang;char&rang;::copy(char*, const char*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::CreatedArreyType::CreatedArreyType(const Matrix::CreatedArreyType&)
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list)
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::messages&lang;char&rang;::do_get(int, int, int, const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&) const
</UL>

<P><STRONG><a name="[225]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string__sub_object(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, char.o(t._ZNSsC1ERKSs), UNUSED)

<P><STRONG><a name="[85]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, char.o(t._ZNSsD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string() &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_unlink() &rArr; __rw::__rw_deallocate(void*, unsigned, int) &rArr; operator delete (void*) &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_unlink()
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::~Matrix()
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::CreatedArreyType::~CreatedArreyType()
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list)
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned)
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::ctype&lang;char&rang;::_C_initfacet(const std::locale&)
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::messages&lang;char&rang;::do_get(int, int, int, const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&) const
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_messages_base::~__rw_messages_base()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> locale.o(i._ZN4__rw15__rw_locale_impC1EPKcjj)
<LI> locale.o(t._ZN4__rw18__rw_locale_vectorISsED1Ev)
</UL>
<P><STRONG><a name="[226]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, char.o(t._ZNSsD1Ev), UNUSED)

<P><STRONG><a name="[18d]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const char*)</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, locale.o(t._ZNSsaSEPKc))
<BR><BR>[Stack]<UL><LI>Max Depth = 520<LI>Call Chain = std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const char*) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_unlink()
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::Matrix()
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::CreatArray(unsigned, unsigned)
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::Matrix(const Matrix&)
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::_C_init()
</UL>

<P><STRONG><a name="[184]"></a>std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, locale.o(t._ZNSsaSERKSs))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + In Cycle
<LI>Call Chain = std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&) &rArr;  std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__string_ref&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_inc_ref()
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_unlink()
</UL>
<BR>[Called By]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::CreatedArreyType::operator =(Matrix::CreatedArreyType&&)
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rw::__rw_locale_imp::__rw_locale_imp(const char*, unsigned, unsigned)
</UL>

<P><STRONG><a name="[1cd]"></a>const T1& std::max&lang;unsigned&rang;(const T1&, const T1&)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, char.o(t._ZSt3maxIjERKT_S2_S2_))
<BR><BR>[Called By]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::_C_allocate(unsigned, unsigned, unsigned)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned)
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[df]"></a>[local to system_stm32f4xx_c]::SetSysClock()</STRONG> (Thumb, 272 bytes, Stack size 12 bytes, system_stm32f4xx.o(i._ZN40_INTERNAL_18_system_stm32f4xx_c_5d646a6711SetSysClockEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = [local to system_stm32f4xx_c]::SetSysClock()
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[135]"></a>[local to TIMs_c]::ScheduleTIM_NVIC_Config()</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, tims.o(i._ZN27_INTERNAL_6_TIMs_c_1dee1b8523ScheduleTIM_NVIC_ConfigEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = [local to TIMs_c]::ScheduleTIM_NVIC_Config() &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScheduleTIM_Config()
</UL>

<P><STRONG><a name="[136]"></a>[local to TIMs_c]::WatchDogTIM_NVIC_Config()</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, tims.o(i._ZN27_INTERNAL_6_TIMs_c_1dee1b8523WatchDogTIM_NVIC_ConfigEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = [local to TIMs_c]::WatchDogTIM_NVIC_Config() &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDogTIM_Config()
</UL>

<P><STRONG><a name="[107]"></a>[local to USART_c]::Map_Config()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, usart.o(i._ZN28_INTERNAL_7_USART_c_7079b10310Map_ConfigEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 768<LI>Call Chain = [local to USART_c]::Map_Config() &rArr; MapParamsInit() &rArr; Matrix::getE(unsigned) &rArr; Matrix::Matrix(const Matrix&) &rArr; Matrix::CreatMatrixFrame(void*, unsigned, unsigned) &rArr; Matrix::CreatArray(unsigned, unsigned) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const char*) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MapParamsInit()
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::Map_USART_Config()
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Config()
</UL>

<P><STRONG><a name="[10a]"></a>[local to USART_c]::PC_USART_Config()</STRONG> (Thumb, 170 bytes, Stack size 32 bytes, usart.o(i._ZN28_INTERNAL_7_USART_c_7079b10315PC_USART_ConfigEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = [local to USART_c]::PC_USART_Config() &rArr; [local to USART_c]::PC_USART_Rx_DMA_Config(unsigned, unsigned) &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::PC_USART_Tx_DMA_Config()
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::PC_USART_Rx_DMA_Config(unsigned, unsigned)
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Config()
</UL>

<P><STRONG><a name="[162]"></a>[local to USART_c]::Map_USART_Config()</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, usart.o(i._ZN28_INTERNAL_7_USART_c_7079b10316Map_USART_ConfigEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = [local to USART_c]::Map_USART_Config() &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::Map_Config()
</UL>

<P><STRONG><a name="[108]"></a>[local to USART_c]::Ctrl_USART_Config()</STRONG> (Thumb, 166 bytes, Stack size 32 bytes, usart.o(i._ZN28_INTERNAL_7_USART_c_7079b10317Ctrl_USART_ConfigEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = [local to USART_c]::Ctrl_USART_Config() &rArr; [local to USART_c]::Ctrl_USART_Rx_DMA_Config(unsigned, unsigned) &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::Ctrl_USART_Tx_DMA_Config()
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::Ctrl_USART_Rx_DMA_Config(unsigned, unsigned)
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Config()
</UL>

<P><STRONG><a name="[106]"></a>[local to USART_c]::NVIC_Configuration()</STRONG> (Thumb, 272 bytes, Stack size 8 bytes, usart.o(i._ZN28_INTERNAL_7_USART_c_7079b10318NVIC_ConfigurationEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = [local to USART_c]::NVIC_Configuration() &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Config()
</UL>

<P><STRONG><a name="[109]"></a>[local to USART_c]::Equips_USART_Config()</STRONG> (Thumb, 170 bytes, Stack size 32 bytes, usart.o(i._ZN28_INTERNAL_7_USART_c_7079b10319Equips_USART_ConfigEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = [local to USART_c]::Equips_USART_Config() &rArr; [local to USART_c]::Equips_USART_Rx_DMA_Config(unsigned, unsigned) &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::Equips_USART_Tx_DMA_Config()
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::Equips_USART_Rx_DMA_Config(unsigned, unsigned)
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Config()
</UL>

<P><STRONG><a name="[16c]"></a>[local to USART_c]::BL_USART_Rx_DMA_Config(unsigned, unsigned)</STRONG> (Thumb, 120 bytes, Stack size 72 bytes, usart.o(i._ZN28_INTERNAL_7_USART_c_7079b10322BL_USART_Rx_DMA_ConfigEjj))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = [local to USART_c]::BL_USART_Rx_DMA_Config(unsigned, unsigned) &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ITConfig
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_DeInit
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DMACmd
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::BlueTooth_USART_Config()
</UL>

<P><STRONG><a name="[172]"></a>[local to USART_c]::BL_USART_Tx_DMA_Config()</STRONG> (Thumb, 116 bytes, Stack size 64 bytes, usart.o(i._ZN28_INTERNAL_7_USART_c_7079b10322BL_USART_Tx_DMA_ConfigEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = [local to USART_c]::BL_USART_Tx_DMA_Config() &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ITConfig
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_DeInit
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DMACmd
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::BlueTooth_USART_Config()
</UL>

<P><STRONG><a name="[10b]"></a>[local to USART_c]::BlueTooth_USART_Config()</STRONG> (Thumb, 182 bytes, Stack size 32 bytes, usart.o(i._ZN28_INTERNAL_7_USART_c_7079b10322BlueTooth_USART_ConfigEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = [local to USART_c]::BlueTooth_USART_Config() &rArr; [local to USART_c]::BL_USART_Rx_DMA_Config(unsigned, unsigned) &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::BL_USART_Tx_DMA_Config()
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::BL_USART_Rx_DMA_Config(unsigned, unsigned)
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Config()
</UL>

<P><STRONG><a name="[165]"></a>[local to USART_c]::PC_USART_Rx_DMA_Config(unsigned, unsigned)</STRONG> (Thumb, 120 bytes, Stack size 72 bytes, usart.o(i._ZN28_INTERNAL_7_USART_c_7079b10322PC_USART_Rx_DMA_ConfigEjj))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = [local to USART_c]::PC_USART_Rx_DMA_Config(unsigned, unsigned) &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ITConfig
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_DeInit
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DMACmd
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::PC_USART_Config()
</UL>

<P><STRONG><a name="[164]"></a>[local to USART_c]::PC_USART_Tx_DMA_Config()</STRONG> (Thumb, 116 bytes, Stack size 64 bytes, usart.o(i._ZN28_INTERNAL_7_USART_c_7079b10322PC_USART_Tx_DMA_ConfigEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = [local to USART_c]::PC_USART_Tx_DMA_Config() &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ITConfig
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_DeInit
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DMACmd
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::PC_USART_Config()
</UL>

<P><STRONG><a name="[169]"></a>[local to USART_c]::Ctrl_USART_Rx_DMA_Config(unsigned, unsigned)</STRONG> (Thumb, 120 bytes, Stack size 72 bytes, usart.o(i._ZN28_INTERNAL_7_USART_c_7079b10324Ctrl_USART_Rx_DMA_ConfigEjj))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = [local to USART_c]::Ctrl_USART_Rx_DMA_Config(unsigned, unsigned) &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ITConfig
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_DeInit
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DMACmd
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::Ctrl_USART_Config()
</UL>

<P><STRONG><a name="[168]"></a>[local to USART_c]::Ctrl_USART_Tx_DMA_Config()</STRONG> (Thumb, 114 bytes, Stack size 64 bytes, usart.o(i._ZN28_INTERNAL_7_USART_c_7079b10324Ctrl_USART_Tx_DMA_ConfigEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = [local to USART_c]::Ctrl_USART_Tx_DMA_Config() &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ITConfig
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_DeInit
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DMACmd
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::Ctrl_USART_Config()
</UL>

<P><STRONG><a name="[16b]"></a>[local to USART_c]::Equips_USART_Rx_DMA_Config(unsigned, unsigned)</STRONG> (Thumb, 122 bytes, Stack size 72 bytes, usart.o(i._ZN28_INTERNAL_7_USART_c_7079b10326Equips_USART_Rx_DMA_ConfigEjj))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = [local to USART_c]::Equips_USART_Rx_DMA_Config(unsigned, unsigned) &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ITConfig
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_DeInit
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DMACmd
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::Equips_USART_Config()
</UL>

<P><STRONG><a name="[16a]"></a>[local to USART_c]::Equips_USART_Tx_DMA_Config()</STRONG> (Thumb, 114 bytes, Stack size 64 bytes, usart.o(i._ZN28_INTERNAL_7_USART_c_7079b10326Equips_USART_Tx_DMA_ConfigEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = [local to USART_c]::Equips_USART_Tx_DMA_Config() &rArr; DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ITConfig
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_DeInit
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_DMACmd
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to USART_c]::Equips_USART_Config()
</UL>

<P><STRONG><a name="[138]"></a>[local to Map_c]::GetOriginalCoordinate(motion_status, Coordinate&)</STRONG> (Thumb, 536 bytes, Stack size 80 bytes, map.o(i._ZN26_INTERNAL_5_Map_c_1c83cf2821GetOriginalCoordinateE13motion_statusR10Coordinate))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = [local to Map_c]::GetOriginalCoordinate(motion_status, Coordinate&) &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fabs
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateRealCoordinate()
</UL>

<P><STRONG><a name="[139]"></a>[local to Map_c]::getCurrentCoordIncrement(Coordinate, Coordinate)</STRONG> (Thumb, 48 bytes, Stack size 32 bytes, map.o(i._ZN26_INTERNAL_5_Map_c_1c83cf2824getCurrentCoordIncrementE10CoordinateS0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = [local to Map_c]::getCurrentCoordIncrement(Coordinate, Coordinate)
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateRealCoordinate()
</UL>

<P><STRONG><a name="[13a]"></a>[local to Map_c]::CorrectCoordinateIncrement(Point)</STRONG> (Thumb, 228 bytes, Stack size 120 bytes, map.o(i._ZN26_INTERNAL_5_Map_c_1c83cf2826CorrectCoordinateIncrementE5Point))
<BR><BR>[Stack]<UL><LI>Max Depth = 856<LI>Call Chain = [local to Map_c]::CorrectCoordinateIncrement(Point) &rArr; Matrix::operator *(const Matrix&) &rArr; Matrix::Matrix(const Matrix&) &rArr; Matrix::CreatMatrixFrame(void*, unsigned, unsigned) &rArr; Matrix::CreatArray(unsigned, unsigned) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const char*) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::getElementValue(unsigned, unsigned) const
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::operator *(const Matrix&)
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::operator =(const Matrix&)
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::~Matrix()
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::Matrix()
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::DeleteArray(Matrix::CreatedArreyType)
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::fillMatrix(Matrix::CreatedArreyType)
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::CreatArray(unsigned, unsigned)
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::CreatedArreyType::CreatedArreyType(const Matrix::CreatedArreyType&)
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::CreatedArreyType::~CreatedArreyType()
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateRealCoordinate()
</UL>

<P><STRONG><a name="[113]"></a>[local to Map_c]::SetOrigin()</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, map.o(i._ZN26_INTERNAL_5_Map_c_1c83cf289SetOriginEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = [local to Map_c]::SetOrigin() &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MapParamsInit()
</UL>

<P><STRONG><a name="[9f]"></a>__sti___5_Map_c_1c83cf28</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, map.o(i.__sti___5_Map_c_1c83cf28))
<BR><BR>[Stack]<UL><LI>Max Depth = 544<LI>Call Chain = __sti___5_Map_c_1c83cf28 &rArr; Matrix::Matrix() &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const char*) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Matrix::Matrix()
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> map.o(.init_array)
</UL>
<P><STRONG><a name="[13c]"></a>[local to WatchDog_c]::Checkflags(Flags&)</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, watchdog.o(i._ZN32_INTERNAL_10_WatchDog_c_ec1bf7dc10CheckflagsER5Flags))
<BR><BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bark()
</UL>

<P><STRONG><a name="[10d]"></a>[local to WatchDog_c]::WatchDogParaInit()</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, watchdog.o(i._ZN32_INTERNAL_10_WatchDog_c_ec1bf7dc16WatchDogParaInitEv))
<BR><BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchDogInit()
</UL>

<P><STRONG><a name="[84]"></a>[local to Vol_curve_c]::Triangle_Loop(unsigned, unsigned, unsigned, const double*, unsigned, unsigned, unsigned)</STRONG> (Thumb, 426 bytes, Stack size 80 bytes, vol_curve.o(i._ZN33_INTERNAL_11_Vol_curve_c_8a85b6a913Triangle_LoopEjjjPKdjjj))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = [local to Vol_curve_c]::Triangle_Loop(unsigned, unsigned, unsigned, const double*, unsigned, unsigned, unsigned) &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> vol_curve.o(i._Z9CurveLoopd)
</UL>
<P><STRONG><a name="[ef]"></a>[local to Vol_curve_c]::Distance_curve(double, double, unsigned, Vol_CurveType*)</STRONG> (Thumb, 696 bytes, Stack size 80 bytes, vol_curve.o(i._ZN33_INTERNAL_11_Vol_curve_c_8a85b6a914Distance_curveEddjP13Vol_CurveType))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = [local to Vol_curve_c]::Distance_curve(double, double, unsigned, Vol_CurveType*) &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatCurve(double, double, unsigned)
</UL>

<P><STRONG><a name="[83]"></a>[local to Vol_curve_c]::Trapezoid_Loop(unsigned, unsigned, unsigned, const double*, unsigned, unsigned, unsigned)</STRONG> (Thumb, 570 bytes, Stack size 88 bytes, vol_curve.o(i._ZN33_INTERNAL_11_Vol_curve_c_8a85b6a914Trapezoid_LoopEjjjPKdjjj))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = [local to Vol_curve_c]::Trapezoid_Loop(unsigned, unsigned, unsigned, const double*, unsigned, unsigned, unsigned) &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> vol_curve.o(i._Z9CurveLoopd)
</UL>
<P><STRONG><a name="[fd]"></a>[local to Motion_Ctrl_c]::distanceCal(double, double, double, double, double*, double*)</STRONG> (Thumb, 430 bytes, Stack size 88 bytes, motion_ctrl.o(i._ZN35_INTERNAL_13_Motion_Ctrl_c_4ff28ade11distanceCalEddddPdS0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = [local to Motion_Ctrl_c]::distanceCal(double, double, double, double, double*, double*) &rArr; __hardfp_atan &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AimMode_Loop()
</UL>

<P><STRONG><a name="[f8]"></a>[local to ActionCtrl_c]::WaitforActFinished(bool&)</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, actionctrl.o(i._ZN34_INTERNAL_12_ActionCtrl_c_8926957318WaitforActFinishedERb))
<BR><BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpecialAct(SpecialActions&, unsigned char&)
</UL>

<P><STRONG><a name="[13e]"></a>[local to Schedule_c]::Loop_200Hz()</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, schedule.o(i._ZN32_INTERNAL_10_Schedule_c_608fc9d510Loop_200HzEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 912<LI>Call Chain = [local to Schedule_c]::Loop_200Hz() &rArr; UpdateRealCoordinate() &rArr; [local to Map_c]::CorrectCoordinateIncrement(Point) &rArr; Matrix::operator *(const Matrix&) &rArr; Matrix::Matrix(const Matrix&) &rArr; Matrix::CreatMatrixFrame(void*, unsigned, unsigned) &rArr; Matrix::CreatArray(unsigned, unsigned) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::operator =(const char*) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned) &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::replace(unsigned, unsigned, const char*, unsigned, unsigned, unsigned) &rArr; __rw::__rw_throw(int, ...) &rArr; std::__rw_exception::_C_vformat(int, std::__va_list) &rArr; [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShutUp()
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateRealCoordinate()
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Base_Loop()
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendDataToF103(unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Loops()
</UL>

<P><STRONG><a name="[13d]"></a>[local to Schedule_c]::Loop_1000Hz()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, schedule.o(i._ZN32_INTERNAL_10_Schedule_c_608fc9d511Loop_1000HzEv))
<BR><BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Loops()
</UL>

<P><STRONG><a name="[140]"></a>[local to Schedule_c]::Loop_20Hz()</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, schedule.o(i._ZN32_INTERNAL_10_Schedule_c_608fc9d59Loop_20HzEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 488<LI>Call Chain = [local to Schedule_c]::Loop_20Hz() &rArr; Controler_handle() &rArr; AfterGetAim(double, double, unsigned) &rArr; CreatMoveLine(MoveInLine*, double, double, Coordinate*) &rArr; CreateLine(Point, Point) &rArr; CreateLine(Point, double, bool) &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Controler_handle()
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Loops()
</UL>

<P><STRONG><a name="[13f]"></a>[local to Schedule_c]::Loop_50Hz()</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, schedule.o(i._ZN32_INTERNAL_10_Schedule_c_608fc9d59Loop_50HzEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = [local to Schedule_c]::Loop_50Hz() &rArr; SendDataToPC() &rArr; SendMsg_byDMA(DMA_Stream_TypeDef*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendDataToPC()
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendDataToMaster()
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendDataToEquips()
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flagCheck()
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Loops()
</UL>

<P><STRONG><a name="[173]"></a>[local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, const char*, std::__va_list)</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, rwstdexcept.o(i._ZN37_INTERNAL_15_rwstdexcept_cpp_8697b68a4__rw13__rw_vfmatstrEPcjPKcSt9__va_list))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, const char*, std::__va_list) &rArr; operator new[] (unsigned) &rArr; operator new(unsigned) &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsnprintf
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator delete[] (void*)
</UL>
<BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list)
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::_C_vformat(int, std::__va_list)
</UL>

<P><STRONG><a name="[176]"></a>[local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list)</STRONG> (Thumb, 296 bytes, Stack size 88 bytes, rwstdexcept.o(i._ZN37_INTERNAL_15_rwstdexcept_cpp_8697b68a4__rw13__rw_vfmatstrEPcjiSt9__va_list))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = [local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, int, std::__va_list) &rArr; sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[local to rwstdexcept_cpp]::__rw::__rw_vfmatstr(char*, unsigned, const char*, std::__va_list)
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sscanf
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strrchr
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const char*, const std::allocator&lang;char&rang;&)
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::~locale()
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::~basic_string()
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;&)
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::locale::locale()
</UL>
<BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::__rw_exception::_C_vformat(int, std::__va_list)
</UL>

<P><STRONG><a name="[a0]"></a>__sti___8_char_cpp_a3dc957a</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, char.o(i.__sti___8_char_cpp_a3dc957a))
<BR>[Address Reference Count : 1]<UL><LI> char.o(.init_array)
</UL>
<P><STRONG><a name="[86]"></a>&lang;Func5&rang;</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, locale.o(i.<Func5>))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = &lang;Func5&rang; &rArr; std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const std::allocator&lang;char&rang;&)
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::basic_string&lang;char, std::char_traits&lang;char&rang;, std::allocator&lang;char&rang;&rang;::basic_string(const std::allocator&lang;char&rang;&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> locale.o(i._ZN4__rw15__rw_locale_impC1EPKcjj)
</UL>
<P><STRONG><a name="[a1]"></a>__sti___10_locale_cpp_ff99fc7b</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, locale.o(i.__sti___10_locale_cpp_ff99fc7b))
<BR>[Address Reference Count : 1]<UL><LI> locale.o(.init_array)
</UL>
<P><STRONG><a name="[1c7]"></a>_fp_digits</STRONG> (Thumb, 334 bytes, Stack size 56 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>
<BR>[Called By]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[1b4]"></a>_printf_core</STRONG> (Thumb, 1744 bytes, Stack size 136 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>
<BR>[Called By]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0vsnprintf
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0fprintf
</UL>

<P><STRONG><a name="[1c9]"></a>_printf_post_padding</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[1c8]"></a>_printf_pre_padding</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[8b]"></a>_snputc</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, printfa.o(i._snputc))
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0vsnprintf)
</UL>
<P><STRONG><a name="[a2]"></a>__sti___10_rwcats_cpp_64e8068e</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, rwcats.o(i.__sti___10_rwcats_cpp_64e8068e))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = __sti___10_rwcats_cpp_64e8068e &rArr; __aeabi_atexit &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;operator new[] (unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rwcats.o(.init_array)
</UL>
<P><STRONG><a name="[80]"></a>[local to arm_exceptions_c]::__default_terminate_handler()</STRONG> (Thumb, 6 bytes, Stack size 8 bytes, arm_exceptions_globs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = [local to arm_exceptions_c]::__default_terminate_handler()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_exceptions_globs.o(.text)
</UL>
<P><STRONG><a name="[cb]"></a>_fp_value</STRONG> (Thumb, 256 bytes, Stack size 56 bytes, scanf_fp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ul2d
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
</UL>

<P><STRONG><a name="[81]"></a>_scanf_char_input</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, scanf_char.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> scanf_char.o(.text)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
